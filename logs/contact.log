0    [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Entering Application.getSingletons()
149  [main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
197  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@143153c
203  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@143153c
204  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@143153c
206  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e93446
209  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@674286
210  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@2e77d4
214  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@10f0fbd
215  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@10f0fbd
216  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10f0fbd
218  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@d1544a
219  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@d1544a
220  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d1544a
223  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1920a91
224  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1920a91
225  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1920a91
227  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@199e94c
228  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@199e94c
229  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@199e94c
232  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@13692c8
233  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@13692c8
234  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13692c8
253  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3cbf64
255  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3cbf64
257  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3cbf64
261  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1dddb91
268  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1dddb91
269  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1dddb91
273  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b208de
274  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b208de
276  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@659aeb
278  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@659aeb
280  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@1d5cf30
281  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@1d5cf30
282  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@21541f
284  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@21541f
287  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@b522aa
288  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@b522aa
290  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@15d2bf6
291  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15d2bf6
295  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@123e236
296  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@123e236
297  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@123e236
308  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@b1307a
310  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@11b6813
319  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@11b6813
320  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@11b6813
321  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1eafca5
324  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@d22976
324  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@d22976
326  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@15212c7
327  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@15212c7
329  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1921f18
332  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1921f18
334  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@109fa8b
335  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@109fa8b
338  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@15bc2a6
339  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@15bc2a6
340  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18b745f
342  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1fc7585
344  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@50cabc
345  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@50cabc
346  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@50cabc
348  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1319b33
349  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1319b33
350  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1319b33
351  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@1222039
354  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@a6e22f
355  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@a6e22f
355  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@a6e22f
357  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@234d3a
359  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@234d3a
359  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@234d3a
361  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@1ef3215
367  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@1585986
368  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1585986
369  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e535ed
374  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@cb6e1d
375  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@cb6e1d
377  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ece1b
379  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@918d7f
383  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@1a87817
384  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a87817
386  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1376d5c
387  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1eced15
387  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1c13614
387  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1c58b22
387  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3181c9
388  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3fb859
388  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@15ff7e8
388  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@18cd143
412  [main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
439  [main] INFO  org.hibernate.Version  - HHH000412: Hibernate Core {4.1.4.Final}
457  [main] INFO  org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
460  [main] INFO  org.hibernate.cfg.Environment  - HHH000021: Bytecode provider name : javassist
486  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
500  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
511  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
511  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
513  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
514  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
515  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
515  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
516  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
517  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
517  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
518  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
518  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
527  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
528  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
538  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@143153c
547  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@143153c
547  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@143153c
547  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e93446
548  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@674286
548  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@2e77d4
548  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@10f0fbd
548  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@10f0fbd
548  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10f0fbd
548  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@d1544a
548  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@d1544a
549  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d1544a
549  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1920a91
549  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1920a91
549  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1920a91
549  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@199e94c
549  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@199e94c
549  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@199e94c
549  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@13692c8
550  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@13692c8
550  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13692c8
550  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3cbf64
550  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3cbf64
550  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3cbf64
550  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1dddb91
550  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1dddb91
551  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1dddb91
551  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b208de
551  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b208de
551  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@659aeb
551  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@659aeb
551  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@1d5cf30
551  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@1d5cf30
551  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@21541f
552  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@21541f
552  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@b522aa
552  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@b522aa
552  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@15d2bf6
552  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15d2bf6
552  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@123e236
552  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@123e236
553  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@123e236
553  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@b1307a
553  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@11b6813
553  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@11b6813
553  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@11b6813
553  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1eafca5
553  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@d22976
554  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@d22976
554  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@15212c7
554  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@15212c7
554  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1921f18
554  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1921f18
554  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@109fa8b
554  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@109fa8b
554  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@15bc2a6
555  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@15bc2a6
555  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18b745f
555  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1fc7585
555  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@50cabc
555  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@50cabc
555  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@50cabc
555  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1319b33
555  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1319b33
556  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1319b33
556  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@1222039
556  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@a6e22f
556  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@a6e22f
556  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@a6e22f
556  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@234d3a
556  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@234d3a
556  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@234d3a
556  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@1ef3215
557  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@1585986
557  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1585986
557  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e535ed
557  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@cb6e1d
557  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@cb6e1d
557  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ece1b
557  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@918d7f
557  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@1a87817
557  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a87817
558  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@190e10f
558  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@a7c898
558  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1628c1c
558  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@dcaf16
558  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6ad0df
558  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b6e1b6
558  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@9c8dbd
558  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1d75a8
559  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
559  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
559  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
559  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
559  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
559  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
559  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
559  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
560  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
560  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
560  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
560  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
560  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
560  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
560  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
561  [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Look up for persistence unit: contacts
806  [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
820  [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Searching mapped entities in jar/par: file:/home/frederic/Dropbox/Projects/java/contacts/target/classes/
829  [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
916  [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Java element filter matched for com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
918  [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.services.ContactService
924  [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.application.Application
948  [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
954  [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Creating Factory: contacts
987  [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
988  [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
1022 [main] DEBUG org.hibernate.ejb.util.NamingHelper  - No JNDI name configured for binding Ejb3Configuration
1035 [main] DEBUG org.hibernate.cfg.Configuration  - Preparing to build session factory with filters : {}
1066 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
1067 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
1072 [main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
1105 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
1108 [main] DEBUG org.hibernate.cfg.AnnotationBinder  - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
1117 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Contact
1123 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact on table Contact
1160 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=contactId, insertable=true, updatable=true, unique=false}
1175 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property contactId with lazy=false
1191 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for contactId
1202 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property contactId
1213 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
1224 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property email with lazy=false
1231 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for email
1231 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property email
1231 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
1231 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
1232 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
1232 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
1232 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
1232 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
1232 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
1232 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
1235 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for contactId
1236 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for email
1236 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for firstName
1236 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for lastName
1237 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
1245 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
1251 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
1251 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
1251 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
1252 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
1252 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
1315 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000402: Using Hibernate built-in connection pool (not for production use!)
1319 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 20
1320 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000006: Autocommit mode: true
1321 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000401: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db/contacts]
1322 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000046: Connection properties: {user=sa, autocommit=true, release_mode=auto}
1365 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Opening new JDBC connection
1787 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Created connection to: jdbc:hsqldb:file:db/contacts, Isolation Level: 2
1808 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Database ->
       name : HSQL Database Engine
    version : 1.8.0
      major : 1
      minor : 8
1809 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Driver ->
       name : HSQL Database Engine Driver
    version : 1.8.0
      major : 1
      minor : 8
1810 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - JDBC version : 3.0
1855 [main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
1868 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder  - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
1882 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic flush during beforeCompletion(): disabled
1883 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic session close at end of transaction: disabled
1884 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch size: 15
1884 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch updates for versioned data: disabled
1885 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Scrollable result sets: enabled
1885 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Wrap result sets: disabled
1885 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC3 getGeneratedKeys(): disabled
1886 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Connection release mode: auto
1889 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator  - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
1893 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default batch fetch size: 1
1894 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Generate SQL with comments: disabled
1894 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL updates by primary key: disabled
1895 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL inserts for batching: disabled
1895 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
1898 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  - HHH000397: Using ASTQueryTranslatorFactory
1899 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query language substitutions: {}
1900 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JPA-QL strict compliance: enabled
1901 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Second-level cache: enabled
1901 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query cache: disabled
1901 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
1902 [main] DEBUG org.hibernate.cfg.SettingsFactory  - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
1904 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Optimize cache for minimal puts: disabled
1904 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Structured second-level cache entries: disabled
1905 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Statistics: disabled
1906 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Deleted entity synthetic identifier rollback: disabled
1906 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default entity-mode: pojo
1906 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Named query checking : enabled
1907 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
1907 [main] DEBUG org.hibernate.cfg.SettingsFactory  - multi-tenancy strategy : NONE
1935 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
1960 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
1961 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:hsqldb:file:db/contacts, sun.management.compiler=HotSpot Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, hibernate.transaction.flush_before_completion=false, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/resources.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rt.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jsse.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jce.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/charsets.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/netx.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/plugin.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rhino.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jfr.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_15-b20, hibernate.connection.autocommit=true, javax.persistence.jdbc.user=sa, user.name=frederic, guice.disable.misplaced.annotation.check=true, hibernate.connection.release_mode=auto, user.language=fr, sun.boot.library.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/i386, classworlds.conf=/opt/tools/java/tools/maven/3.0.5/bin/m2.conf, java.version=1.7.0_15, user.timezone=Europe/Paris, sun.arch.data.model=32, java.endorsed.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=FR, securerandom.source=file:/dev/./urandom, java.home=/usr/lib/jvm/java-7-openjdk-i386/jre, java.vm.info=mixed mode, os.version=3.2.0-39-generic-pae, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=:, java.vm.version=23.7-b01, javax.persistence.jdbc.url=jdbc:hsqldb:file:db/contacts, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.X11.XToolkit, hibernate.connection.username=sa, user.home=/home/frederic, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=/usr/java/packages/lib/i386:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vm.vendor=Oracle Corporation, maven.home=/opt/tools/java/tools/maven/3.0.5, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/opt/tools/java/tools/maven/3.0.5/boot/plexus-classworlds-2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.7, sun.cpu.endian=little, javax.persistence.jdbc.driver=org.hsqldb.jdbcDriver, sun.os.patch.level=unknown, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=i386, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/ext:/usr/java/packages/lib/ext, javax.persistence.jdbc.password=, user.dir=/home/frederic/Dropbox/Projects/java/contacts, line.separator=
, java.vm.name=OpenJDK Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
2057 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
2151 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2153 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select contactId from Contact where contactId =?
2154 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select contact_.contactId, contact_.email as email0_, contact_.firstName as firstName0_, contact_.lastName as lastName0_ from Contact contact_ where contact_.contactId=?
2155 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Contact (email, firstName, lastName, contactId) values (?, ?, ?, ?)
2155 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Contact set email=?, firstName=?, lastName=? where contactId=?
2155 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Contact where contactId=?
2155 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into Contact (contactId, email, firstName, lastName) values (null, ?, ?, ?)
2214 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [NONE]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
2224 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [READ]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
2225 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
2226 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE_NOWAIT]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
2226 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [FORCE]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
2227 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_READ]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
2231 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_WRITE]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
2240 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
2241 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
2242 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
2249 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
2261 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
2268 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@33862f
2283 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: ba25ecc0-ae88-40bf-a7c1-229290db82ec (<unnamed>)
2293 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
2294 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
2314 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000228: Running hbm2ddl schema update
2314 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000102: Fetching database metadata
2317 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000396: Updating schema
2325 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
2325 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
2326 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
2326 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2326 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2326 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
2326 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
2326 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
2328 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
2459 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000261: Table found: PUBLIC.CONTACT
2471 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000037: Columns: [email, lastname, firstname, contactid]
2475 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000108: Foreign keys: []
2476 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000126: Indexes: [sys_idx_46]
2476 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
2476 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000232: Schema update complete
2477 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named HQL queries
2477 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named SQL queries
2494 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
2561 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@109c8df
2562 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - Registering EntityManagerFactory: contacts 
2653 [main] DEBUG org.hibernate.internal.SessionImpl  - Opened session at timestamp: 13654568612
2658 [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Exiting Application.getSingletons()
2659 [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Entering Application.getSingletons()
2659 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@143153c
2659 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@143153c
2659 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@143153c
2660 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e93446
2660 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@674286
2660 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@2e77d4
2660 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@10f0fbd
2660 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@10f0fbd
2660 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10f0fbd
2660 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@d1544a
2660 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@d1544a
2661 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d1544a
2661 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1920a91
2661 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1920a91
2661 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1920a91
2661 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@199e94c
2661 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@199e94c
2661 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@199e94c
2662 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@13692c8
2662 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@13692c8
2662 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13692c8
2662 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3cbf64
2662 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3cbf64
2662 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3cbf64
2662 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1dddb91
2662 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1dddb91
2663 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1dddb91
2663 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b208de
2663 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b208de
2663 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@659aeb
2663 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@659aeb
2663 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@1d5cf30
2663 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@1d5cf30
2664 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@21541f
2664 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@21541f
2664 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@b522aa
2664 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@b522aa
2664 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@15d2bf6
2664 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15d2bf6
2664 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@123e236
2664 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@123e236
2665 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@123e236
2665 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@b1307a
2665 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@11b6813
2665 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@11b6813
2665 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@11b6813
2665 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1eafca5
2665 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@d22976
2665 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@d22976
2666 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@15212c7
2666 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@15212c7
2666 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1921f18
2666 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1921f18
2666 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@109fa8b
2670 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@109fa8b
2671 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@15bc2a6
2671 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@15bc2a6
2672 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18b745f
2672 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1fc7585
2672 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@50cabc
2672 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@50cabc
2678 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@50cabc
2679 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1319b33
2679 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1319b33
2679 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1319b33
2679 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@1222039
2679 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@a6e22f
2679 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@a6e22f
2679 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@a6e22f
2679 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@234d3a
2679 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@234d3a
2680 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@234d3a
2681 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@1ef3215
2681 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@1585986
2681 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1585986
2682 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e535ed
2682 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@cb6e1d
2682 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@cb6e1d
2683 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ece1b
2683 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@918d7f
2684 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@1a87817
2684 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a87817
2684 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@8c55bf
2684 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1517402
2684 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@973101
2684 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@126617
2684 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1ec87a2
2684 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1bcba63
2684 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@170e695
2685 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@132546d
2688 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2689 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2689 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2689 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2689 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2689 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2689 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2689 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2690 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2690 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2690 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2690 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2690 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2690 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2690 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2690 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Look up for persistence unit: contacts
2723 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
2724 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Searching mapped entities in jar/par: file:/home/frederic/Dropbox/Projects/java/contacts/target/classes/
2725 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2726 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Java element filter matched for com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2727 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.services.ContactService
2729 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.application.Application
2740 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
2741 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Creating Factory: contacts
2742 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2742 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
2744 [main] DEBUG org.hibernate.ejb.util.NamingHelper  - No JNDI name configured for binding Ejb3Configuration
2752 [main] DEBUG org.hibernate.cfg.Configuration  - Preparing to build session factory with filters : {}
2753 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
2753 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
2754 [main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2759 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2760 [main] DEBUG org.hibernate.cfg.AnnotationBinder  - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2761 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Contact
2761 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact on table Contact
2762 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=contactId, insertable=true, updatable=true, unique=false}
2762 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property contactId with lazy=false
2762 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for contactId
2762 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property contactId
2762 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
2762 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property email with lazy=false
2762 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for email
2763 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property email
2763 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
2764 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
2764 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
2765 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
2765 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
2765 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
2766 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
2766 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
2766 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for contactId
2766 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for email
2766 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for firstName
2766 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for lastName
2766 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
2766 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2766 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2766 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
2766 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
2766 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
2766 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
2768 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2768 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 20
2769 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000006: Autocommit mode: true
2769 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000401: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db/contacts]
2770 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000046: Connection properties: {user=sa, autocommit=true, release_mode=auto}
2776 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Opening new JDBC connection
2777 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Created connection to: jdbc:hsqldb:file:db/contacts, Isolation Level: 2
2778 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Database ->
       name : HSQL Database Engine
    version : 1.8.0
      major : 1
      minor : 8
2779 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Driver ->
       name : HSQL Database Engine Driver
    version : 1.8.0
      major : 1
      minor : 8
2780 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - JDBC version : 3.0
2781 [main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2782 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder  - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2783 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic flush during beforeCompletion(): disabled
2783 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic session close at end of transaction: disabled
2783 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch size: 15
2783 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch updates for versioned data: disabled
2784 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Scrollable result sets: enabled
2784 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Wrap result sets: disabled
2784 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC3 getGeneratedKeys(): disabled
2784 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Connection release mode: auto
2784 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator  - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2785 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default batch fetch size: 1
2785 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Generate SQL with comments: disabled
2785 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL updates by primary key: disabled
2786 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL inserts for batching: disabled
2786 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2789 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  - HHH000397: Using ASTQueryTranslatorFactory
2790 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query language substitutions: {}
2791 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JPA-QL strict compliance: enabled
2791 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Second-level cache: enabled
2791 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query cache: disabled
2792 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2792 [main] DEBUG org.hibernate.cfg.SettingsFactory  - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2793 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Optimize cache for minimal puts: disabled
2793 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Structured second-level cache entries: disabled
2793 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Statistics: disabled
2793 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Deleted entity synthetic identifier rollback: disabled
2794 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default entity-mode: pojo
2794 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Named query checking : enabled
2794 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2794 [main] DEBUG org.hibernate.cfg.SettingsFactory  - multi-tenancy strategy : NONE
2794 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
2796 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
2800 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:hsqldb:file:db/contacts, sun.management.compiler=HotSpot Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, hibernate.transaction.flush_before_completion=false, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/resources.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rt.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jsse.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jce.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/charsets.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/netx.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/plugin.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rhino.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jfr.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_15-b20, hibernate.connection.autocommit=true, javax.persistence.jdbc.user=sa, user.name=frederic, guice.disable.misplaced.annotation.check=true, hibernate.connection.release_mode=auto, user.language=fr, sun.boot.library.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/i386, classworlds.conf=/opt/tools/java/tools/maven/3.0.5/bin/m2.conf, java.version=1.7.0_15, user.timezone=Europe/Paris, sun.arch.data.model=32, java.endorsed.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=FR, securerandom.source=file:/dev/./urandom, java.home=/usr/lib/jvm/java-7-openjdk-i386/jre, java.vm.info=mixed mode, os.version=3.2.0-39-generic-pae, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=:, java.vm.version=23.7-b01, javax.persistence.jdbc.url=jdbc:hsqldb:file:db/contacts, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.X11.XToolkit, hibernate.connection.username=sa, user.home=/home/frederic, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=/usr/java/packages/lib/i386:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vm.vendor=Oracle Corporation, maven.home=/opt/tools/java/tools/maven/3.0.5, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/opt/tools/java/tools/maven/3.0.5/boot/plexus-classworlds-2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.7, sun.cpu.endian=little, javax.persistence.jdbc.driver=org.hsqldb.jdbcDriver, sun.os.patch.level=unknown, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=i386, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/ext:/usr/java/packages/lib/ext, javax.persistence.jdbc.password=, user.dir=/home/frederic/Dropbox/Projects/java/contacts, line.separator=
, java.vm.name=OpenJDK Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
2803 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
2805 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2806 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select contactId from Contact where contactId =?
2806 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select contact_.contactId, contact_.email as email2_, contact_.firstName as firstName2_, contact_.lastName as lastName2_ from Contact contact_ where contact_.contactId=?
2807 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Contact (email, firstName, lastName, contactId) values (?, ?, ?, ?)
2807 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Contact set email=?, firstName=?, lastName=? where contactId=?
2807 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Contact where contactId=?
2807 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into Contact (contactId, email, firstName, lastName) values (null, ?, ?, ?)
2808 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [NONE]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2808 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [READ]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2808 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2808 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE_NOWAIT]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2808 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [FORCE]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2809 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_READ]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2809 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_WRITE]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2809 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2809 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2810 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2810 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2810 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2810 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 48dc73f1-27cb-4bad-a20d-db48b9dcd87e (<unnamed>)
2810 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
2810 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
2810 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000228: Running hbm2ddl schema update
2810 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000102: Fetching database metadata
2811 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000396: Updating schema
2811 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
2812 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
2813 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
2813 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2814 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2814 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
2814 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
2814 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
2814 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
2844 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000261: Table found: PUBLIC.CONTACT
2845 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000037: Columns: [email, lastname, firstname, contactid]
2846 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000108: Foreign keys: []
2847 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000126: Indexes: [sys_idx_46]
2847 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
2847 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000232: Schema update complete
2848 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named HQL queries
2848 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named SQL queries
2849 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
2851 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - Registering EntityManagerFactory: contacts 
2852 [main] WARN  org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - HHH000436: Entity manager factory name (contacts) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
2853 [main] DEBUG org.hibernate.internal.SessionImpl  - Opened session at timestamp: 13654568615
2854 [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Exiting Application.getSingletons()
2855 [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Entering Application.getSingletons()
2855 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@143153c
2856 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@143153c
2856 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@143153c
2856 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e93446
2857 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@674286
2857 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@2e77d4
2857 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@10f0fbd
2857 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@10f0fbd
2858 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10f0fbd
2858 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@d1544a
2858 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@d1544a
2858 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d1544a
2859 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1920a91
2859 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1920a91
2859 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1920a91
2860 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@199e94c
2860 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@199e94c
2860 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@199e94c
2860 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@13692c8
2861 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@13692c8
2861 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13692c8
2862 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3cbf64
2862 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3cbf64
2862 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3cbf64
2865 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1dddb91
2866 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1dddb91
2867 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1dddb91
2867 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b208de
2867 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b208de
2867 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@659aeb
2867 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@659aeb
2867 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@1d5cf30
2867 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@1d5cf30
2867 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@21541f
2868 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@21541f
2868 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@b522aa
2868 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@b522aa
2868 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@15d2bf6
2868 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15d2bf6
2868 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@123e236
2868 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@123e236
2868 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@123e236
2868 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@b1307a
2868 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@11b6813
2869 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@11b6813
2869 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@11b6813
2869 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1eafca5
2869 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@d22976
2869 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@d22976
2869 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@15212c7
2869 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@15212c7
2869 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1921f18
2869 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1921f18
2869 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@109fa8b
2870 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@109fa8b
2870 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@15bc2a6
2870 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@15bc2a6
2870 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18b745f
2870 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1fc7585
2870 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@50cabc
2870 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@50cabc
2870 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@50cabc
2870 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1319b33
2870 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1319b33
2871 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1319b33
2871 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@1222039
2871 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@a6e22f
2872 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@a6e22f
2873 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@a6e22f
2874 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@234d3a
2874 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@234d3a
2874 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@234d3a
2876 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@1ef3215
2877 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@1585986
2877 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1585986
2877 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e535ed
2877 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@cb6e1d
2877 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@cb6e1d
2877 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ece1b
2877 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@918d7f
2877 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@1a87817
2877 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a87817
2878 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1181de1
2878 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@51b2d4
2878 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b38cdf
2878 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@e5af67
2878 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@15eac45
2878 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@800269
2878 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1e5044
2878 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@27d7d0
2878 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2878 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2879 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2879 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2879 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2880 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2881 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2881 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2881 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2881 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2881 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2882 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2882 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2882 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2882 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2882 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Look up for persistence unit: contacts
2931 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
2932 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Searching mapped entities in jar/par: file:/home/frederic/Dropbox/Projects/java/contacts/target/classes/
2933 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2942 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Java element filter matched for com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2943 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.services.ContactService
2945 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.application.Application
2948 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
2948 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Creating Factory: contacts
2949 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2953 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
2955 [main] DEBUG org.hibernate.ejb.util.NamingHelper  - No JNDI name configured for binding Ejb3Configuration
2956 [main] DEBUG org.hibernate.cfg.Configuration  - Preparing to build session factory with filters : {}
2957 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
2957 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
2958 [main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2958 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2959 [main] DEBUG org.hibernate.cfg.AnnotationBinder  - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2967 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Contact
2968 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact on table Contact
2969 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=contactId, insertable=true, updatable=true, unique=false}
2970 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property contactId with lazy=false
2970 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for contactId
2970 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property contactId
2971 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
2972 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property email with lazy=false
2972 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for email
2972 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property email
2972 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
2972 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
2972 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
2972 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
2973 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
2973 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
2973 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
2974 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
2974 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for contactId
2974 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for email
2974 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for firstName
2974 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for lastName
2974 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
2974 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2974 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2974 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
2974 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
2975 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
2975 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
2975 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2976 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 20
2976 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000006: Autocommit mode: true
2977 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000401: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db/contacts]
2977 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000046: Connection properties: {user=sa, autocommit=true, release_mode=auto}
2979 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Opening new JDBC connection
2979 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Created connection to: jdbc:hsqldb:file:db/contacts, Isolation Level: 2
2980 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Database ->
       name : HSQL Database Engine
    version : 1.8.0
      major : 1
      minor : 8
2980 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Driver ->
       name : HSQL Database Engine Driver
    version : 1.8.0
      major : 1
      minor : 8
2981 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - JDBC version : 3.0
2982 [main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2983 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder  - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
3049 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic flush during beforeCompletion(): disabled
3049 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic session close at end of transaction: disabled
3049 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch size: 15
3049 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch updates for versioned data: disabled
3049 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Scrollable result sets: enabled
3049 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Wrap result sets: disabled
3049 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC3 getGeneratedKeys(): disabled
3049 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Connection release mode: auto
3049 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator  - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
3050 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default batch fetch size: 1
3050 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Generate SQL with comments: disabled
3050 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL updates by primary key: disabled
3050 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL inserts for batching: disabled
3050 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
3050 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  - HHH000397: Using ASTQueryTranslatorFactory
3050 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query language substitutions: {}
3050 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JPA-QL strict compliance: enabled
3050 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Second-level cache: enabled
3050 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query cache: disabled
3050 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
3051 [main] DEBUG org.hibernate.cfg.SettingsFactory  - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
3051 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Optimize cache for minimal puts: disabled
3051 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Structured second-level cache entries: disabled
3051 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Statistics: disabled
3051 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Deleted entity synthetic identifier rollback: disabled
3051 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default entity-mode: pojo
3051 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Named query checking : enabled
3051 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
3051 [main] DEBUG org.hibernate.cfg.SettingsFactory  - multi-tenancy strategy : NONE
3051 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
3052 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
3052 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:hsqldb:file:db/contacts, sun.management.compiler=HotSpot Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, hibernate.transaction.flush_before_completion=false, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/resources.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rt.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jsse.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jce.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/charsets.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/netx.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/plugin.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rhino.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jfr.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_15-b20, hibernate.connection.autocommit=true, javax.persistence.jdbc.user=sa, user.name=frederic, guice.disable.misplaced.annotation.check=true, hibernate.connection.release_mode=auto, user.language=fr, sun.boot.library.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/i386, classworlds.conf=/opt/tools/java/tools/maven/3.0.5/bin/m2.conf, java.version=1.7.0_15, user.timezone=Europe/Paris, sun.arch.data.model=32, java.endorsed.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=FR, securerandom.source=file:/dev/./urandom, java.home=/usr/lib/jvm/java-7-openjdk-i386/jre, java.vm.info=mixed mode, os.version=3.2.0-39-generic-pae, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=:, java.vm.version=23.7-b01, javax.persistence.jdbc.url=jdbc:hsqldb:file:db/contacts, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.X11.XToolkit, hibernate.connection.username=sa, user.home=/home/frederic, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=/usr/java/packages/lib/i386:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vm.vendor=Oracle Corporation, maven.home=/opt/tools/java/tools/maven/3.0.5, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/opt/tools/java/tools/maven/3.0.5/boot/plexus-classworlds-2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.7, sun.cpu.endian=little, javax.persistence.jdbc.driver=org.hsqldb.jdbcDriver, sun.os.patch.level=unknown, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=i386, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/ext:/usr/java/packages/lib/ext, javax.persistence.jdbc.password=, user.dir=/home/frederic/Dropbox/Projects/java/contacts, line.separator=
, java.vm.name=OpenJDK Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
3054 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
3068 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
3070 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select contactId from Contact where contactId =?
3071 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select contact_.contactId, contact_.email as email4_, contact_.firstName as firstName4_, contact_.lastName as lastName4_ from Contact contact_ where contact_.contactId=?
3072 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Contact (email, firstName, lastName, contactId) values (?, ?, ?, ?)
3073 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Contact set email=?, firstName=?, lastName=? where contactId=?
3074 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Contact where contactId=?
3077 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into Contact (contactId, email, firstName, lastName) values (null, ?, ?, ?)
3079 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [NONE]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
3083 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [READ]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
3085 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
3086 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE_NOWAIT]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
3088 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [FORCE]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
3090 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_READ]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
3097 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_WRITE]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
3098 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
3098 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
3099 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
3100 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
3101 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
3102 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 37bece44-6d11-429e-8182-2d5aca44385d (<unnamed>)
3103 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
3104 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
3104 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000228: Running hbm2ddl schema update
3105 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000102: Fetching database metadata
3106 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000396: Updating schema
3107 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
3107 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
3107 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
3107 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
3107 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
3107 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
3107 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
3108 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
3108 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
3124 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000261: Table found: PUBLIC.CONTACT
3125 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000037: Columns: [email, lastname, firstname, contactid]
3126 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000108: Foreign keys: []
3127 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000126: Indexes: [sys_idx_46]
3128 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
3129 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000232: Schema update complete
3129 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named HQL queries
3130 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named SQL queries
3131 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
3133 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - Registering EntityManagerFactory: contacts 
3134 [main] WARN  org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - HHH000436: Entity manager factory name (contacts) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
3134 [main] DEBUG org.hibernate.internal.SessionImpl  - Opened session at timestamp: 13654568617
3135 [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Exiting Application.getSingletons()
3136 [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Entering Application.getSingletons()
3136 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@143153c
3137 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@143153c
3138 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@143153c
3139 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e93446
3139 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@674286
3140 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@2e77d4
3141 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@10f0fbd
3142 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@10f0fbd
3142 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10f0fbd
3143 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@d1544a
3144 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@d1544a
3144 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d1544a
3145 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1920a91
3145 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1920a91
3145 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1920a91
3145 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@199e94c
3145 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@199e94c
3145 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@199e94c
3145 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@13692c8
3145 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@13692c8
3145 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13692c8
3145 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3cbf64
3145 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3cbf64
3146 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3cbf64
3146 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1dddb91
3146 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1dddb91
3146 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1dddb91
3146 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b208de
3146 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b208de
3146 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@659aeb
3146 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@659aeb
3146 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@1d5cf30
3146 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@1d5cf30
3146 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@21541f
3147 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@21541f
3147 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@b522aa
3147 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@b522aa
3148 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@15d2bf6
3149 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15d2bf6
3149 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@123e236
3150 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@123e236
3151 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@123e236
3151 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@b1307a
3152 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@11b6813
3153 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@11b6813
3154 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@11b6813
3154 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1eafca5
3155 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@d22976
3156 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@d22976
3157 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@15212c7
3157 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@15212c7
3158 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1921f18
3159 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1921f18
3159 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@109fa8b
3159 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@109fa8b
3159 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@15bc2a6
3160 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@15bc2a6
3161 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18b745f
3161 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1fc7585
3161 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@50cabc
3161 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@50cabc
3161 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@50cabc
3161 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1319b33
3167 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1319b33
3167 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1319b33
3168 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@1222039
3169 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@a6e22f
3169 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@a6e22f
3170 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@a6e22f
3171 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@234d3a
3171 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@234d3a
3172 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@234d3a
3173 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@1ef3215
3173 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@1585986
3174 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1585986
3175 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e535ed
3175 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@cb6e1d
3176 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@cb6e1d
3176 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ece1b
3177 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@918d7f
3177 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@1a87817
3178 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a87817
3178 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b5bb24
3178 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1179fc
3179 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@15fcaec
3179 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@36026
3180 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@19d5fd2
3180 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@fdea5c
3180 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2573dd
3181 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d9eec4
3181 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
3182 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
3183 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
3183 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
3184 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
3184 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
3185 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
3185 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
3185 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
3185 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
3185 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
3185 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
3185 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
3185 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
3186 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
3186 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Look up for persistence unit: contacts
3209 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
3210 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Searching mapped entities in jar/par: file:/home/frederic/Dropbox/Projects/java/contacts/target/classes/
3212 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
3213 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Java element filter matched for com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
3214 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.services.ContactService
3216 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.application.Application
3217 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
3218 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Creating Factory: contacts
3219 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
3220 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
3222 [main] DEBUG org.hibernate.ejb.util.NamingHelper  - No JNDI name configured for binding Ejb3Configuration
3223 [main] DEBUG org.hibernate.cfg.Configuration  - Preparing to build session factory with filters : {}
3224 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
3224 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
3225 [main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
3227 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
3227 [main] DEBUG org.hibernate.cfg.AnnotationBinder  - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
3227 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Contact
3227 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact on table Contact
3228 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=contactId, insertable=true, updatable=true, unique=false}
3229 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property contactId with lazy=false
3229 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for contactId
3229 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property contactId
3229 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
3229 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property email with lazy=false
3229 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for email
3229 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property email
3230 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
3230 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
3230 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
3230 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
3230 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
3230 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
3230 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
3230 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
3231 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for contactId
3231 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for email
3231 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for firstName
3231 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for lastName
3231 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
3231 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
3231 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
3231 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
3231 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
3231 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
3231 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
3232 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000402: Using Hibernate built-in connection pool (not for production use!)
3232 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 20
3232 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000006: Autocommit mode: true
3232 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000401: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db/contacts]
3235 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000046: Connection properties: {user=sa, autocommit=true, release_mode=auto}
3235 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Opening new JDBC connection
3236 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Created connection to: jdbc:hsqldb:file:db/contacts, Isolation Level: 2
3236 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Database ->
       name : HSQL Database Engine
    version : 1.8.0
      major : 1
      minor : 8
3236 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Driver ->
       name : HSQL Database Engine Driver
    version : 1.8.0
      major : 1
      minor : 8
3236 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - JDBC version : 3.0
3237 [main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
3238 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder  - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
3238 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic flush during beforeCompletion(): disabled
3238 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic session close at end of transaction: disabled
3238 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch size: 15
3238 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch updates for versioned data: disabled
3238 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Scrollable result sets: enabled
3238 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Wrap result sets: disabled
3239 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC3 getGeneratedKeys(): disabled
3239 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Connection release mode: auto
3239 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator  - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
3239 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default batch fetch size: 1
3239 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Generate SQL with comments: disabled
3239 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL updates by primary key: disabled
3239 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL inserts for batching: disabled
3239 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
3240 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  - HHH000397: Using ASTQueryTranslatorFactory
3240 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query language substitutions: {}
3240 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JPA-QL strict compliance: enabled
3240 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Second-level cache: enabled
3240 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query cache: disabled
3240 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
3240 [main] DEBUG org.hibernate.cfg.SettingsFactory  - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
3240 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Optimize cache for minimal puts: disabled
3240 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Structured second-level cache entries: disabled
3241 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Statistics: disabled
3241 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Deleted entity synthetic identifier rollback: disabled
3241 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default entity-mode: pojo
3241 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Named query checking : enabled
3241 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
3241 [main] DEBUG org.hibernate.cfg.SettingsFactory  - multi-tenancy strategy : NONE
3241 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
3242 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
3242 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:hsqldb:file:db/contacts, sun.management.compiler=HotSpot Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, hibernate.transaction.flush_before_completion=false, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/resources.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rt.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jsse.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jce.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/charsets.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/netx.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/plugin.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rhino.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jfr.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_15-b20, hibernate.connection.autocommit=true, javax.persistence.jdbc.user=sa, user.name=frederic, guice.disable.misplaced.annotation.check=true, hibernate.connection.release_mode=auto, user.language=fr, sun.boot.library.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/i386, classworlds.conf=/opt/tools/java/tools/maven/3.0.5/bin/m2.conf, java.version=1.7.0_15, user.timezone=Europe/Paris, sun.arch.data.model=32, java.endorsed.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=FR, securerandom.source=file:/dev/./urandom, java.home=/usr/lib/jvm/java-7-openjdk-i386/jre, java.vm.info=mixed mode, os.version=3.2.0-39-generic-pae, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=:, java.vm.version=23.7-b01, javax.persistence.jdbc.url=jdbc:hsqldb:file:db/contacts, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.X11.XToolkit, hibernate.connection.username=sa, user.home=/home/frederic, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=/usr/java/packages/lib/i386:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vm.vendor=Oracle Corporation, maven.home=/opt/tools/java/tools/maven/3.0.5, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/opt/tools/java/tools/maven/3.0.5/boot/plexus-classworlds-2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.7, sun.cpu.endian=little, javax.persistence.jdbc.driver=org.hsqldb.jdbcDriver, sun.os.patch.level=unknown, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=i386, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/ext:/usr/java/packages/lib/ext, javax.persistence.jdbc.password=, user.dir=/home/frederic/Dropbox/Projects/java/contacts, line.separator=
, java.vm.name=OpenJDK Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
3244 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
3246 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
3247 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select contactId from Contact where contactId =?
3248 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select contact_.contactId, contact_.email as email6_, contact_.firstName as firstName6_, contact_.lastName as lastName6_ from Contact contact_ where contact_.contactId=?
3249 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Contact (email, firstName, lastName, contactId) values (?, ?, ?, ?)
3250 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Contact set email=?, firstName=?, lastName=? where contactId=?
3250 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Contact where contactId=?
3250 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into Contact (contactId, email, firstName, lastName) values (null, ?, ?, ?)
3251 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [NONE]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
3251 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [READ]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
3252 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
3252 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE_NOWAIT]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
3253 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [FORCE]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
3253 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_READ]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
3254 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_WRITE]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
3254 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
3258 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
3259 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
3260 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
3261 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
3261 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 80b47cbe-1a81-4d55-96f6-418347fda84a (<unnamed>)
3262 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
3263 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
3263 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000228: Running hbm2ddl schema update
3263 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000102: Fetching database metadata
3263 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000396: Updating schema
3263 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
3263 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
3263 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
3263 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
3263 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
3263 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
3263 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
3263 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
3263 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
3295 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000261: Table found: PUBLIC.CONTACT
3296 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000037: Columns: [email, lastname, firstname, contactid]
3297 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000108: Foreign keys: []
3298 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000126: Indexes: [sys_idx_46]
3299 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
3300 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000232: Schema update complete
3300 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named HQL queries
3301 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named SQL queries
3302 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
3304 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - Registering EntityManagerFactory: contacts 
3305 [main] WARN  org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - HHH000436: Entity manager factory name (contacts) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
3306 [main] DEBUG org.hibernate.internal.SessionImpl  - Opened session at timestamp: 13654568619
3306 [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Exiting Application.getSingletons()
1    [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Entering Application.getSingletons()
51   [main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
105  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@595ecd
105  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@595ecd
105  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@595ecd
106  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69df39
149  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@10cdbb3
150  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@9fb03a
154  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1b5896b
155  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1b5896b
155  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1b5896b
157  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@4afb6c
159  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@4afb6c
159  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4afb6c
163  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1e7318
168  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1e7318
169  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1e7318
173  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@af6982
176  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@af6982
177  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@af6982
180  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@5e01b1
181  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@5e01b1
181  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5e01b1
192  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@15807f8
194  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@15807f8
198  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15807f8
200  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ca43de
201  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ca43de
202  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1ca43de
206  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1242983
207  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1242983
209  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@18fe852
210  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@18fe852
212  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@e8b6be
213  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@e8b6be
215  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@10f866a
216  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@10f866a
219  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@1332b8b
220  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1332b8b
222  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@96f20e
223  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@96f20e
226  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@104f2f3
227  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@104f2f3
228  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@104f2f3
230  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@850cec
232  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@98f6d0
233  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@98f6d0
234  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@98f6d0
246  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@968b45
248  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@5bffb6
249  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5bffb6
250  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@db4c57
254  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@db4c57
256  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6dc0c4
257  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6dc0c4
258  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@11a6cc4
261  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@11a6cc4
264  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@a21ce7
268  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@a21ce7
269  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1187172
271  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1c3ceb3
273  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@9bcf69
274  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@9bcf69
275  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@9bcf69
276  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@46c5e
277  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@46c5e
278  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@46c5e
280  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@c6e3f7
281  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@14d7534
282  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@14d7534
283  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@14d7534
285  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@96faf3
286  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@96faf3
286  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@96faf3
288  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@7766ef
293  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@174d546
294  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@174d546
296  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@17c3099
301  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@cd49df
302  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@cd49df
303  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@18e743
305  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@186a96
312  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@cf528
313  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@cf528
315  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1925a7e
316  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1733944
316  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b4ae76
317  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@12a025f
317  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@101e817
318  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2c72d6
319  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@275748
319  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d36d63
354  [main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
362  [main] INFO  org.hibernate.Version  - HHH000412: Hibernate Core {4.1.4.Final}
369  [main] INFO  org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
372  [main] INFO  org.hibernate.cfg.Environment  - HHH000021: Bytecode provider name : javassist
387  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
389  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
390  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
391  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
393  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
394  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
396  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
397  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
399  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
400  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
402  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
404  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
405  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
407  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
408  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
412  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@595ecd
413  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@595ecd
414  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@595ecd
414  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69df39
414  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@10cdbb3
415  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@9fb03a
415  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1b5896b
415  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1b5896b
415  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1b5896b
415  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@4afb6c
415  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@4afb6c
416  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4afb6c
416  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1e7318
416  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1e7318
416  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1e7318
416  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@af6982
416  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@af6982
417  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@af6982
417  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@5e01b1
417  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@5e01b1
417  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5e01b1
417  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@15807f8
417  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@15807f8
418  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15807f8
418  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ca43de
418  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ca43de
419  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1ca43de
420  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1242983
420  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1242983
420  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@18fe852
420  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@18fe852
420  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@e8b6be
420  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@e8b6be
420  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@10f866a
421  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@10f866a
421  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@1332b8b
421  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1332b8b
421  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@96f20e
421  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@96f20e
421  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@104f2f3
422  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@104f2f3
422  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@104f2f3
422  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@850cec
422  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@98f6d0
422  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@98f6d0
422  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@98f6d0
423  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@968b45
423  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@5bffb6
423  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5bffb6
423  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@db4c57
423  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@db4c57
423  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6dc0c4
424  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6dc0c4
424  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@11a6cc4
424  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@11a6cc4
424  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@a21ce7
424  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@a21ce7
424  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1187172
424  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1c3ceb3
425  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@9bcf69
425  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@9bcf69
425  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@9bcf69
425  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@46c5e
425  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@46c5e
425  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@46c5e
426  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@c6e3f7
426  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@14d7534
426  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@14d7534
426  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@14d7534
426  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@96faf3
426  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@96faf3
427  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@96faf3
427  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@7766ef
427  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@174d546
427  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@174d546
427  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@17c3099
427  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@cd49df
427  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@cd49df
428  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@18e743
428  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@186a96
428  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@cf528
428  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@cf528
428  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@129eba3
430  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@12d38ad
430  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1e4053b
430  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11397b9
430  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@14dfa6a
431  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@736dd3
431  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2f3bfa
431  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@10ac43d
431  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
431  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
432  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
432  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
432  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
432  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
432  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
432  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
433  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
433  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
433  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
434  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
434  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
434  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
434  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
434  [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Look up for persistence unit: contacts
554  [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
562  [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Searching mapped entities in jar/par: file:/home/frederic/Dropbox/Projects/java/contacts/target/classes/
563  [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
599  [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Java element filter matched for com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
600  [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.services.ContactService
606  [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.application.Application
612  [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
612  [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Creating Factory: contacts
626  [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
627  [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
663  [main] DEBUG org.hibernate.ejb.util.NamingHelper  - No JNDI name configured for binding Ejb3Configuration
677  [main] DEBUG org.hibernate.cfg.Configuration  - Preparing to build session factory with filters : {}
740  [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
741  [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
746  [main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
779  [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
783  [main] DEBUG org.hibernate.cfg.AnnotationBinder  - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
792  [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Contact
798  [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact on table Contact
839  [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=contactId, insertable=true, updatable=true, unique=false}
845  [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property contactId with lazy=false
849  [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for contactId
851  [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property contactId
855  [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
856  [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property email with lazy=false
856  [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for email
856  [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property email
856  [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
856  [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
857  [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
857  [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
857  [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
857  [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
857  [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
857  [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
859  [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for contactId
859  [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for email
860  [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for firstName
860  [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for lastName
860  [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
862  [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
862  [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
862  [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
862  [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
862  [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
862  [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
888  [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000402: Using Hibernate built-in connection pool (not for production use!)
892  [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 20
893  [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000006: Autocommit mode: true
894  [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000401: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db/contacts]
895  [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000046: Connection properties: {user=sa, autocommit=true, release_mode=auto}
915  [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Opening new JDBC connection
1495 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Created connection to: jdbc:hsqldb:file:db/contacts, Isolation Level: 2
1514 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Database ->
       name : HSQL Database Engine
    version : 1.8.0
      major : 1
      minor : 8
1514 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Driver ->
       name : HSQL Database Engine Driver
    version : 1.8.0
      major : 1
      minor : 8
1514 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - JDBC version : 3.0
1548 [main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
1561 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder  - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
1575 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic flush during beforeCompletion(): disabled
1576 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic session close at end of transaction: disabled
1576 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch size: 15
1577 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch updates for versioned data: disabled
1578 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Scrollable result sets: enabled
1578 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Wrap result sets: disabled
1579 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC3 getGeneratedKeys(): disabled
1580 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Connection release mode: auto
1580 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator  - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
1595 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default batch fetch size: 1
1596 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Generate SQL with comments: disabled
1597 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL updates by primary key: disabled
1598 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL inserts for batching: disabled
1598 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
1609 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  - HHH000397: Using ASTQueryTranslatorFactory
1610 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query language substitutions: {}
1611 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JPA-QL strict compliance: enabled
1611 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Second-level cache: enabled
1612 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query cache: disabled
1613 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
1615 [main] DEBUG org.hibernate.cfg.SettingsFactory  - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
1616 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Optimize cache for minimal puts: disabled
1616 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Structured second-level cache entries: disabled
1617 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Statistics: disabled
1618 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Deleted entity synthetic identifier rollback: disabled
1619 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default entity-mode: pojo
1619 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Named query checking : enabled
1620 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
1621 [main] DEBUG org.hibernate.cfg.SettingsFactory  - multi-tenancy strategy : NONE
1649 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
1680 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
1690 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:hsqldb:file:db/contacts, sun.management.compiler=HotSpot Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, hibernate.transaction.flush_before_completion=false, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/resources.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rt.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jsse.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jce.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/charsets.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/netx.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/plugin.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rhino.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jfr.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_15-b20, hibernate.connection.autocommit=true, javax.persistence.jdbc.user=sa, user.name=frederic, guice.disable.misplaced.annotation.check=true, hibernate.connection.release_mode=auto, user.language=fr, sun.boot.library.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/i386, classworlds.conf=/opt/tools/java/tools/maven/3.0.5/bin/m2.conf, java.version=1.7.0_15, user.timezone=Europe/Paris, sun.arch.data.model=32, java.endorsed.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=FR, securerandom.source=file:/dev/./urandom, java.home=/usr/lib/jvm/java-7-openjdk-i386/jre, java.vm.info=mixed mode, os.version=3.2.0-39-generic-pae, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=:, java.vm.version=23.7-b01, javax.persistence.jdbc.url=jdbc:hsqldb:file:db/contacts, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.X11.XToolkit, hibernate.connection.username=sa, user.home=/home/frederic, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=/usr/java/packages/lib/i386:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vm.vendor=Oracle Corporation, maven.home=/opt/tools/java/tools/maven/3.0.5, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/opt/tools/java/tools/maven/3.0.5/boot/plexus-classworlds-2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.7, sun.cpu.endian=little, javax.persistence.jdbc.driver=org.hsqldb.jdbcDriver, sun.os.patch.level=unknown, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=i386, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/ext:/usr/java/packages/lib/ext, javax.persistence.jdbc.password=, user.dir=/home/frederic/Dropbox/Projects/java/contacts, line.separator=
, java.vm.name=OpenJDK Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
1785 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
1869 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
1870 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select contactId from Contact where contactId =?
1870 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select contact_.contactId, contact_.email as email0_, contact_.firstName as firstName0_, contact_.lastName as lastName0_ from Contact contact_ where contact_.contactId=?
1871 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Contact (email, firstName, lastName, contactId) values (?, ?, ?, ?)
1872 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Contact set email=?, firstName=?, lastName=? where contactId=?
1872 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Contact where contactId=?
1872 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into Contact (contactId, email, firstName, lastName) values (null, ?, ?, ?)
1891 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [NONE]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
1891 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [READ]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
1892 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
1892 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE_NOWAIT]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
1893 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [FORCE]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
1893 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_READ]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
1893 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_WRITE]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
1894 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
1894 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
1894 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
1901 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
1902 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_ from Contact contact0_ where contact0_.contactId=?
1907 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1788f20
1922 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 9539d8f1-824a-4780-af95-88f1be66040a (<unnamed>)
1923 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
1924 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
1929 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000228: Running hbm2ddl schema update
1931 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000102: Fetching database metadata
1934 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000396: Updating schema
1934 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
1935 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
1935 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
1935 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
1935 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
1935 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
1935 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
1935 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
1935 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
1984 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000261: Table found: PUBLIC.CONTACT
1985 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000037: Columns: [email, lastname, firstname, contactid]
1986 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000108: Foreign keys: []
1986 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000126: Indexes: [sys_idx_46]
1986 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
1987 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000232: Schema update complete
1987 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named HQL queries
1988 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named SQL queries
1993 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
2062 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@1e32705
2062 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - Registering EntityManagerFactory: contacts 
2141 [main] DEBUG org.hibernate.internal.SessionImpl  - Opened session at timestamp: 13654576099
2146 [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Exiting Application.getSingletons()
2147 [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Entering Application.getSingletons()
2148 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@595ecd
2148 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@595ecd
2149 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@595ecd
2149 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69df39
2150 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@10cdbb3
2151 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@9fb03a
2151 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1b5896b
2152 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1b5896b
2152 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1b5896b
2153 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@4afb6c
2154 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@4afb6c
2154 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4afb6c
2154 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1e7318
2155 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1e7318
2156 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1e7318
2156 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@af6982
2157 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@af6982
2158 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@af6982
2158 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@5e01b1
2159 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@5e01b1
2159 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5e01b1
2159 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@15807f8
2160 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@15807f8
2160 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15807f8
2160 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ca43de
2161 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ca43de
2161 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1ca43de
2161 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1242983
2161 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1242983
2162 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@18fe852
2162 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@18fe852
2162 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@e8b6be
2163 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@e8b6be
2163 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@10f866a
2163 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@10f866a
2163 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@1332b8b
2164 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1332b8b
2164 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@96f20e
2164 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@96f20e
2165 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@104f2f3
2165 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@104f2f3
2165 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@104f2f3
2166 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@850cec
2166 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@98f6d0
2166 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@98f6d0
2167 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@98f6d0
2167 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@968b45
2167 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@5bffb6
2168 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5bffb6
2168 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@db4c57
2169 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@db4c57
2170 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6dc0c4
2170 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6dc0c4
2170 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@11a6cc4
2171 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@11a6cc4
2171 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@a21ce7
2172 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@a21ce7
2172 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1187172
2173 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1c3ceb3
2173 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@9bcf69
2175 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@9bcf69
2175 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@9bcf69
2175 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@46c5e
2175 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@46c5e
2176 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@46c5e
2176 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@c6e3f7
2177 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@14d7534
2178 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@14d7534
2178 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@14d7534
2179 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@96faf3
2179 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@96faf3
2179 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@96faf3
2180 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@7766ef
2181 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@174d546
2182 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@174d546
2182 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@17c3099
2182 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@cd49df
2183 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@cd49df
2183 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@18e743
2184 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@186a96
2185 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@cf528
2185 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@cf528
2186 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@122a86d
2186 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5f90ca
2187 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1adfd1
2188 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c1a99
2188 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@d65e13
2189 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1ba6831
2190 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@10e793d
2190 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1399769
2191 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2192 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2193 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2193 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2194 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2195 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2196 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2197 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2197 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2198 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2199 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2200 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2200 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2201 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2202 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2202 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Look up for persistence unit: contacts
2236 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
2237 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Searching mapped entities in jar/par: file:/home/frederic/Dropbox/Projects/java/contacts/target/classes/
2238 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2239 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Java element filter matched for com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2240 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.services.ContactService
2242 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.application.Application
2258 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
2259 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Creating Factory: contacts
2260 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2261 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
2263 [main] DEBUG org.hibernate.ejb.util.NamingHelper  - No JNDI name configured for binding Ejb3Configuration
2264 [main] DEBUG org.hibernate.cfg.Configuration  - Preparing to build session factory with filters : {}
2265 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
2265 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
2266 [main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2266 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2267 [main] DEBUG org.hibernate.cfg.AnnotationBinder  - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2268 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Contact
2268 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact on table Contact
2270 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=contactId, insertable=true, updatable=true, unique=false}
2271 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property contactId with lazy=false
2272 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for contactId
2272 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property contactId
2273 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
2276 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property email with lazy=false
2276 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for email
2276 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property email
2276 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
2277 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
2277 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
2277 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
2281 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
2281 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
2282 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
2282 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
2282 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for contactId
2282 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for email
2283 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for firstName
2283 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for lastName
2283 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
2284 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2284 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2284 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
2284 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
2284 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
2284 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
2285 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2293 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 20
2294 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000006: Autocommit mode: true
2295 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000401: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db/contacts]
2296 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000046: Connection properties: {user=sa, autocommit=true, release_mode=auto}
2296 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Opening new JDBC connection
2297 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Created connection to: jdbc:hsqldb:file:db/contacts, Isolation Level: 2
2298 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Database ->
       name : HSQL Database Engine
    version : 1.8.0
      major : 1
      minor : 8
2299 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Driver ->
       name : HSQL Database Engine Driver
    version : 1.8.0
      major : 1
      minor : 8
2300 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - JDBC version : 3.0
2301 [main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2303 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder  - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2303 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic flush during beforeCompletion(): disabled
2304 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic session close at end of transaction: disabled
2305 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch size: 15
2305 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch updates for versioned data: disabled
2306 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Scrollable result sets: enabled
2307 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Wrap result sets: disabled
2308 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC3 getGeneratedKeys(): disabled
2308 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Connection release mode: auto
2309 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator  - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2310 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default batch fetch size: 1
2311 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Generate SQL with comments: disabled
2311 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL updates by primary key: disabled
2312 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL inserts for batching: disabled
2313 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2313 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  - HHH000397: Using ASTQueryTranslatorFactory
2314 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query language substitutions: {}
2314 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JPA-QL strict compliance: enabled
2315 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Second-level cache: enabled
2316 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query cache: disabled
2316 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2317 [main] DEBUG org.hibernate.cfg.SettingsFactory  - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2318 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Optimize cache for minimal puts: disabled
2319 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Structured second-level cache entries: disabled
2319 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Statistics: disabled
2319 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Deleted entity synthetic identifier rollback: disabled
2320 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default entity-mode: pojo
2320 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Named query checking : enabled
2321 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2321 [main] DEBUG org.hibernate.cfg.SettingsFactory  - multi-tenancy strategy : NONE
2321 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
2322 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
2323 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:hsqldb:file:db/contacts, sun.management.compiler=HotSpot Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, hibernate.transaction.flush_before_completion=false, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/resources.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rt.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jsse.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jce.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/charsets.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/netx.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/plugin.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rhino.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jfr.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_15-b20, hibernate.connection.autocommit=true, javax.persistence.jdbc.user=sa, user.name=frederic, guice.disable.misplaced.annotation.check=true, hibernate.connection.release_mode=auto, user.language=fr, sun.boot.library.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/i386, classworlds.conf=/opt/tools/java/tools/maven/3.0.5/bin/m2.conf, java.version=1.7.0_15, user.timezone=Europe/Paris, sun.arch.data.model=32, java.endorsed.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=FR, securerandom.source=file:/dev/./urandom, java.home=/usr/lib/jvm/java-7-openjdk-i386/jre, java.vm.info=mixed mode, os.version=3.2.0-39-generic-pae, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=:, java.vm.version=23.7-b01, javax.persistence.jdbc.url=jdbc:hsqldb:file:db/contacts, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.X11.XToolkit, hibernate.connection.username=sa, user.home=/home/frederic, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=/usr/java/packages/lib/i386:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vm.vendor=Oracle Corporation, maven.home=/opt/tools/java/tools/maven/3.0.5, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/opt/tools/java/tools/maven/3.0.5/boot/plexus-classworlds-2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.7, sun.cpu.endian=little, javax.persistence.jdbc.driver=org.hsqldb.jdbcDriver, sun.os.patch.level=unknown, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=i386, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/ext:/usr/java/packages/lib/ext, javax.persistence.jdbc.password=, user.dir=/home/frederic/Dropbox/Projects/java/contacts, line.separator=
, java.vm.name=OpenJDK Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
2327 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
2330 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2331 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select contactId from Contact where contactId =?
2332 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select contact_.contactId, contact_.email as email2_, contact_.firstName as firstName2_, contact_.lastName as lastName2_ from Contact contact_ where contact_.contactId=?
2332 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Contact (email, firstName, lastName, contactId) values (?, ?, ?, ?)
2333 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Contact set email=?, firstName=?, lastName=? where contactId=?
2334 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Contact where contactId=?
2334 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into Contact (contactId, email, firstName, lastName) values (null, ?, ?, ?)
2335 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [NONE]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2336 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [READ]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2337 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2338 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE_NOWAIT]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2339 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [FORCE]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2340 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_READ]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2340 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_WRITE]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2341 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2342 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2343 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2344 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2345 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_ from Contact contact0_ where contact0_.contactId=?
2345 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 4eb0c148-f719-4be9-84b3-7eafbed1b4ad (<unnamed>)
2346 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
2347 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
2347 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000228: Running hbm2ddl schema update
2347 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000102: Fetching database metadata
2348 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000396: Updating schema
2349 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
2350 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
2350 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
2351 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2352 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2352 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
2353 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
2353 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
2353 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
2383 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000261: Table found: PUBLIC.CONTACT
2384 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000037: Columns: [email, lastname, firstname, contactid]
2385 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000108: Foreign keys: []
2386 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000126: Indexes: [sys_idx_46]
2386 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
2387 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000232: Schema update complete
2388 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named HQL queries
2388 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named SQL queries
2389 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
2391 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - Registering EntityManagerFactory: contacts 
2392 [main] WARN  org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - HHH000436: Entity manager factory name (contacts) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
2393 [main] DEBUG org.hibernate.internal.SessionImpl  - Opened session at timestamp: 13654576102
2394 [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Exiting Application.getSingletons()
2395 [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Entering Application.getSingletons()
2396 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@595ecd
2396 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@595ecd
2397 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@595ecd
2398 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69df39
2398 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@10cdbb3
2399 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@9fb03a
2400 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1b5896b
2400 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1b5896b
2401 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1b5896b
2402 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@4afb6c
2402 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@4afb6c
2403 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4afb6c
2403 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1e7318
2404 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1e7318
2405 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1e7318
2406 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@af6982
2406 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@af6982
2407 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@af6982
2408 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@5e01b1
2408 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@5e01b1
2409 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5e01b1
2410 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@15807f8
2410 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@15807f8
2411 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15807f8
2411 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ca43de
2412 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ca43de
2412 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1ca43de
2413 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1242983
2413 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1242983
2413 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@18fe852
2414 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@18fe852
2414 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@e8b6be
2414 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@e8b6be
2415 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@10f866a
2415 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@10f866a
2415 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@1332b8b
2416 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1332b8b
2416 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@96f20e
2417 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@96f20e
2417 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@104f2f3
2418 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@104f2f3
2418 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@104f2f3
2418 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@850cec
2419 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@98f6d0
2419 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@98f6d0
2420 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@98f6d0
2420 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@968b45
2420 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@5bffb6
2421 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5bffb6
2421 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@db4c57
2421 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@db4c57
2422 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6dc0c4
2422 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6dc0c4
2422 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@11a6cc4
2423 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@11a6cc4
2423 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@a21ce7
2424 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@a21ce7
2424 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1187172
2424 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1c3ceb3
2425 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@9bcf69
2425 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@9bcf69
2426 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@9bcf69
2426 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@46c5e
2426 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@46c5e
2427 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@46c5e
2427 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@c6e3f7
2428 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@14d7534
2428 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@14d7534
2428 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@14d7534
2429 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@96faf3
2429 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@96faf3
2429 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@96faf3
2431 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@7766ef
2432 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@174d546
2432 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@174d546
2433 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@17c3099
2433 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@cd49df
2433 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@cd49df
2434 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@18e743
2434 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@186a96
2434 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@cf528
2435 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@cf528
2435 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@42ce9b
2435 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@a2a74
2436 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1692eec
2436 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@87b5d0
2437 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1b16f10
2437 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f2865b
2437 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@152e336
2438 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@c32338
2438 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2439 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2439 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2439 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2440 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2440 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2440 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2441 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2441 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2441 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2442 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2442 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2443 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2443 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2443 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2444 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Look up for persistence unit: contacts
2492 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
2494 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Searching mapped entities in jar/par: file:/home/frederic/Dropbox/Projects/java/contacts/target/classes/
2495 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2503 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Java element filter matched for com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2505 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.services.ContactService
2506 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.application.Application
2507 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
2508 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Creating Factory: contacts
2509 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2510 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
2512 [main] DEBUG org.hibernate.ejb.util.NamingHelper  - No JNDI name configured for binding Ejb3Configuration
2513 [main] DEBUG org.hibernate.cfg.Configuration  - Preparing to build session factory with filters : {}
2514 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
2514 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
2515 [main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2516 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2516 [main] DEBUG org.hibernate.cfg.AnnotationBinder  - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2517 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Contact
2518 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact on table Contact
2519 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=contactId, insertable=true, updatable=true, unique=false}
2520 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property contactId with lazy=false
2521 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for contactId
2522 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property contactId
2523 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
2524 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property email with lazy=false
2524 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for email
2526 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property email
2526 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
2526 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
2527 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
2533 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
2533 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
2533 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
2534 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
2534 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
2534 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for contactId
2534 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for email
2534 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for firstName
2534 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for lastName
2534 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
2535 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2535 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2535 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
2535 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
2535 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
2535 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
2536 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2536 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 20
2545 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000006: Autocommit mode: true
2545 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000401: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db/contacts]
2545 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000046: Connection properties: {user=sa, autocommit=true, release_mode=auto}
2546 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Opening new JDBC connection
2546 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Created connection to: jdbc:hsqldb:file:db/contacts, Isolation Level: 2
2547 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Database ->
       name : HSQL Database Engine
    version : 1.8.0
      major : 1
      minor : 8
2547 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Driver ->
       name : HSQL Database Engine Driver
    version : 1.8.0
      major : 1
      minor : 8
2547 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - JDBC version : 3.0
2548 [main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2548 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder  - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2549 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic flush during beforeCompletion(): disabled
2549 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic session close at end of transaction: disabled
2549 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch size: 15
2549 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch updates for versioned data: disabled
2549 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Scrollable result sets: enabled
2549 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Wrap result sets: disabled
2549 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC3 getGeneratedKeys(): disabled
2550 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Connection release mode: auto
2550 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator  - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2550 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default batch fetch size: 1
2550 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Generate SQL with comments: disabled
2550 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL updates by primary key: disabled
2550 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL inserts for batching: disabled
2551 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2551 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  - HHH000397: Using ASTQueryTranslatorFactory
2551 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query language substitutions: {}
2551 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JPA-QL strict compliance: enabled
2551 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Second-level cache: enabled
2551 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query cache: disabled
2552 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2552 [main] DEBUG org.hibernate.cfg.SettingsFactory  - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2554 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Optimize cache for minimal puts: disabled
2557 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Structured second-level cache entries: disabled
2557 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Statistics: disabled
2557 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Deleted entity synthetic identifier rollback: disabled
2557 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default entity-mode: pojo
2558 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Named query checking : enabled
2558 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2561 [main] DEBUG org.hibernate.cfg.SettingsFactory  - multi-tenancy strategy : NONE
2561 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
2562 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
2562 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:hsqldb:file:db/contacts, sun.management.compiler=HotSpot Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, hibernate.transaction.flush_before_completion=false, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/resources.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rt.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jsse.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jce.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/charsets.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/netx.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/plugin.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rhino.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jfr.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_15-b20, hibernate.connection.autocommit=true, javax.persistence.jdbc.user=sa, user.name=frederic, guice.disable.misplaced.annotation.check=true, hibernate.connection.release_mode=auto, user.language=fr, sun.boot.library.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/i386, classworlds.conf=/opt/tools/java/tools/maven/3.0.5/bin/m2.conf, java.version=1.7.0_15, user.timezone=Europe/Paris, sun.arch.data.model=32, java.endorsed.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=FR, securerandom.source=file:/dev/./urandom, java.home=/usr/lib/jvm/java-7-openjdk-i386/jre, java.vm.info=mixed mode, os.version=3.2.0-39-generic-pae, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=:, java.vm.version=23.7-b01, javax.persistence.jdbc.url=jdbc:hsqldb:file:db/contacts, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.X11.XToolkit, hibernate.connection.username=sa, user.home=/home/frederic, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=/usr/java/packages/lib/i386:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vm.vendor=Oracle Corporation, maven.home=/opt/tools/java/tools/maven/3.0.5, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/opt/tools/java/tools/maven/3.0.5/boot/plexus-classworlds-2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.7, sun.cpu.endian=little, javax.persistence.jdbc.driver=org.hsqldb.jdbcDriver, sun.os.patch.level=unknown, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=i386, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/ext:/usr/java/packages/lib/ext, javax.persistence.jdbc.password=, user.dir=/home/frederic/Dropbox/Projects/java/contacts, line.separator=
, java.vm.name=OpenJDK Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
2564 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
2575 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2578 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select contactId from Contact where contactId =?
2579 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select contact_.contactId, contact_.email as email4_, contact_.firstName as firstName4_, contact_.lastName as lastName4_ from Contact contact_ where contact_.contactId=?
2579 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Contact (email, firstName, lastName, contactId) values (?, ?, ?, ?)
2579 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Contact set email=?, firstName=?, lastName=? where contactId=?
2580 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Contact where contactId=?
2580 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into Contact (contactId, email, firstName, lastName) values (null, ?, ?, ?)
2581 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [NONE]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
2582 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [READ]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
2583 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
2586 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE_NOWAIT]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
2587 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [FORCE]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
2588 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_READ]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
2589 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_WRITE]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
2590 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
2591 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
2591 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
2592 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
2593 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_ from Contact contact0_ where contact0_.contactId=?
2594 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 6302afd2-db1a-4e23-949c-44f8158cc7aa (<unnamed>)
2595 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
2596 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
2599 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000228: Running hbm2ddl schema update
2599 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000102: Fetching database metadata
2600 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000396: Updating schema
2601 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
2602 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
2602 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
2603 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2604 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2604 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
2604 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
2604 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
2605 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
2621 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000261: Table found: PUBLIC.CONTACT
2622 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000037: Columns: [email, lastname, firstname, contactid]
2623 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000108: Foreign keys: []
2624 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000126: Indexes: [sys_idx_46]
2625 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
2626 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000232: Schema update complete
2626 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named HQL queries
2627 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named SQL queries
2628 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
2630 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - Registering EntityManagerFactory: contacts 
2631 [main] WARN  org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - HHH000436: Entity manager factory name (contacts) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
2632 [main] DEBUG org.hibernate.internal.SessionImpl  - Opened session at timestamp: 13654576104
2633 [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Exiting Application.getSingletons()
2633 [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Entering Application.getSingletons()
2634 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@595ecd
2635 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@595ecd
2636 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@595ecd
2637 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69df39
2637 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@10cdbb3
2638 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@9fb03a
2639 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1b5896b
2640 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1b5896b
2641 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1b5896b
2641 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@4afb6c
2642 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@4afb6c
2643 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4afb6c
2643 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1e7318
2647 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@1e7318
2648 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1e7318
2649 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@af6982
2650 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@af6982
2650 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@af6982
2651 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@5e01b1
2651 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@5e01b1
2652 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5e01b1
2652 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@15807f8
2653 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@15807f8
2653 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15807f8
2653 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ca43de
2654 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ca43de
2654 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1ca43de
2655 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1242983
2655 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1242983
2656 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@18fe852
2656 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@18fe852
2657 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@e8b6be
2657 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@e8b6be
2658 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@10f866a
2658 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@10f866a
2658 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@1332b8b
2659 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1332b8b
2660 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@96f20e
2660 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@96f20e
2660 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@104f2f3
2661 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@104f2f3
2661 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@104f2f3
2661 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@850cec
2662 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@98f6d0
2662 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@98f6d0
2662 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@98f6d0
2663 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@968b45
2663 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@5bffb6
2664 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5bffb6
2664 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@db4c57
2664 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@db4c57
2665 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6dc0c4
2665 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6dc0c4
2665 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@11a6cc4
2666 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@11a6cc4
2666 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@a21ce7
2667 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@a21ce7
2667 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1187172
2667 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1c3ceb3
2668 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@9bcf69
2668 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@9bcf69
2668 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@9bcf69
2669 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@46c5e
2674 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@46c5e
2678 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@46c5e
2679 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@c6e3f7
2679 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@14d7534
2680 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@14d7534
2681 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@14d7534
2682 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@96faf3
2683 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@96faf3
2683 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@96faf3
2684 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@7766ef
2685 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@174d546
2685 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@174d546
2686 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@17c3099
2686 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@cd49df
2687 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@cd49df
2687 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@18e743
2687 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@186a96
2688 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@cf528
2688 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@cf528
2689 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@18651f9
2689 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16ff0c3
2690 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@27c42e
2690 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c0e7b0
2691 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@aadf7b
2691 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@362ea3
2692 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@12ff879
2692 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@61dacd
2693 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2693 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2694 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2694 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2694 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2695 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2695 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2696 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2696 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2696 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2697 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2697 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2697 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2698 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2698 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2699 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Look up for persistence unit: contacts
2728 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
2729 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Searching mapped entities in jar/par: file:/home/frederic/Dropbox/Projects/java/contacts/target/classes/
2730 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2731 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Java element filter matched for com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2732 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.services.ContactService
2734 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.application.Application
2735 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
2738 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Creating Factory: contacts
2740 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2741 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
2749 [main] DEBUG org.hibernate.ejb.util.NamingHelper  - No JNDI name configured for binding Ejb3Configuration
2750 [main] DEBUG org.hibernate.cfg.Configuration  - Preparing to build session factory with filters : {}
2755 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
2756 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
2757 [main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2757 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2758 [main] DEBUG org.hibernate.cfg.AnnotationBinder  - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2759 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Contact
2760 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact on table Contact
2762 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=contactId, insertable=true, updatable=true, unique=false}
2762 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property contactId with lazy=false
2763 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for contactId
2764 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property contactId
2764 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
2764 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property email with lazy=false
2765 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for email
2765 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property email
2768 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
2769 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
2769 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
2770 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
2770 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
2770 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
2771 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
2771 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
2772 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for contactId
2772 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for email
2772 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for firstName
2772 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for lastName
2772 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
2773 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2773 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2773 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
2774 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
2774 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
2774 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
2789 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2789 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 20
2789 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000006: Autocommit mode: true
2789 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000401: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db/contacts]
2790 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000046: Connection properties: {user=sa, autocommit=true, release_mode=auto}
2791 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Opening new JDBC connection
2792 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Created connection to: jdbc:hsqldb:file:db/contacts, Isolation Level: 2
2802 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Database ->
       name : HSQL Database Engine
    version : 1.8.0
      major : 1
      minor : 8
2802 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Driver ->
       name : HSQL Database Engine Driver
    version : 1.8.0
      major : 1
      minor : 8
2802 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - JDBC version : 3.0
2803 [main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2809 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder  - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2812 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic flush during beforeCompletion(): disabled
2813 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic session close at end of transaction: disabled
2813 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch size: 15
2813 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch updates for versioned data: disabled
2814 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Scrollable result sets: enabled
2816 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Wrap result sets: disabled
2817 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC3 getGeneratedKeys(): disabled
2817 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Connection release mode: auto
2817 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator  - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2817 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default batch fetch size: 1
2817 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Generate SQL with comments: disabled
2817 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL updates by primary key: disabled
2818 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL inserts for batching: disabled
2818 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2818 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  - HHH000397: Using ASTQueryTranslatorFactory
2818 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query language substitutions: {}
2818 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JPA-QL strict compliance: enabled
2818 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Second-level cache: enabled
2818 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query cache: disabled
2819 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2819 [main] DEBUG org.hibernate.cfg.SettingsFactory  - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2820 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Optimize cache for minimal puts: disabled
2820 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Structured second-level cache entries: disabled
2820 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Statistics: disabled
2821 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Deleted entity synthetic identifier rollback: disabled
2821 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default entity-mode: pojo
2821 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Named query checking : enabled
2821 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2821 [main] DEBUG org.hibernate.cfg.SettingsFactory  - multi-tenancy strategy : NONE
2822 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
2823 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
2824 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:hsqldb:file:db/contacts, sun.management.compiler=HotSpot Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, hibernate.transaction.flush_before_completion=false, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/resources.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rt.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jsse.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jce.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/charsets.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/netx.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/plugin.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rhino.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jfr.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_15-b20, hibernate.connection.autocommit=true, javax.persistence.jdbc.user=sa, user.name=frederic, guice.disable.misplaced.annotation.check=true, hibernate.connection.release_mode=auto, user.language=fr, sun.boot.library.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/i386, classworlds.conf=/opt/tools/java/tools/maven/3.0.5/bin/m2.conf, java.version=1.7.0_15, user.timezone=Europe/Paris, sun.arch.data.model=32, java.endorsed.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=FR, securerandom.source=file:/dev/./urandom, java.home=/usr/lib/jvm/java-7-openjdk-i386/jre, java.vm.info=mixed mode, os.version=3.2.0-39-generic-pae, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=:, java.vm.version=23.7-b01, javax.persistence.jdbc.url=jdbc:hsqldb:file:db/contacts, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.X11.XToolkit, hibernate.connection.username=sa, user.home=/home/frederic, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=/usr/java/packages/lib/i386:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vm.vendor=Oracle Corporation, maven.home=/opt/tools/java/tools/maven/3.0.5, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/opt/tools/java/tools/maven/3.0.5/boot/plexus-classworlds-2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.7, sun.cpu.endian=little, javax.persistence.jdbc.driver=org.hsqldb.jdbcDriver, sun.os.patch.level=unknown, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=i386, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/ext:/usr/java/packages/lib/ext, javax.persistence.jdbc.password=, user.dir=/home/frederic/Dropbox/Projects/java/contacts, line.separator=
, java.vm.name=OpenJDK Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
2827 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
2828 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2829 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select contactId from Contact where contactId =?
2829 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select contact_.contactId, contact_.email as email6_, contact_.firstName as firstName6_, contact_.lastName as lastName6_ from Contact contact_ where contact_.contactId=?
2829 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Contact (email, firstName, lastName, contactId) values (?, ?, ?, ?)
2831 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Contact set email=?, firstName=?, lastName=? where contactId=?
2831 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Contact where contactId=?
2832 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into Contact (contactId, email, firstName, lastName) values (null, ?, ?, ?)
2833 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [NONE]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
2834 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [READ]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
2834 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
2835 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE_NOWAIT]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
2835 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [FORCE]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
2836 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_READ]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
2836 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_WRITE]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
2837 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
2839 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
2840 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
2841 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
2842 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_ from Contact contact0_ where contact0_.contactId=?
2843 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 4364aaa1-f7e9-42f7-aec3-66f370ad3b58 (<unnamed>)
2844 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
2844 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
2845 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000228: Running hbm2ddl schema update
2845 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000102: Fetching database metadata
2845 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000396: Updating schema
2845 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
2845 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
2846 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
2846 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2846 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2846 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
2846 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
2847 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
2847 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
2865 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000261: Table found: PUBLIC.CONTACT
2882 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000037: Columns: [email, lastname, firstname, contactid]
2883 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000108: Foreign keys: []
2883 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000126: Indexes: [sys_idx_46]
2884 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
2884 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000232: Schema update complete
2885 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named HQL queries
2886 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named SQL queries
2887 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
2889 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - Registering EntityManagerFactory: contacts 
2890 [main] WARN  org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - HHH000436: Entity manager factory name (contacts) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
2890 [main] DEBUG org.hibernate.internal.SessionImpl  - Opened session at timestamp: 13654576107
2891 [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Exiting Application.getSingletons()
68399 [qtp23457782-20] DEBUG com.capggemini.samples.applications.contacts.rest.services.ContactService  - Entering ContactService.getContactList()
68478 [qtp23457782-20] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: SELECT x from com.capggemini.samples.applications.contacts.rest.persistence.model.Contact x
68491 [qtp23457782-20] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  |  |  |  \-[IDENT] Node: 'capggemini'
       |     |  |  |  |  |  |  |  \-[IDENT] Node: 'samples'
       |     |  |  |  |  |  |  \-[IDENT] Node: 'applications'
       |     |  |  |  |  |  \-[IDENT] Node: 'contacts'
       |     |  |  |  |  \-[IDENT] Node: 'rest'
       |     |  |  |  \-[IDENT] Node: 'persistence'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Contact'
       |     \-[ALIAS] Node: 'x'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'x'

68492 [qtp23457782-20] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
68549 [qtp23457782-20] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
68573 [qtp23457782-20] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : com.capggemini.samples.applications.contacts.rest.persistence.model.Contact (x) -> contact0_
68574 [qtp23457782-20] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : x -> contact0_.contactId
68576 [qtp23457782-20] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
68576 [qtp23457782-20] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( {select clause} contact0_.contactId ) ( FromClause{level=1} Contact contact0_ ) )
68585 [qtp23457782-20] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [Contact contact0_]
68586 [qtp23457782-20] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
68588 [qtp23457782-20] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Contact)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'contact0_.contactId as contactId6_' {alias=x, className=com.capggemini.samples.applications.contacts.rest.persistence.model.Contact, tableAlias=contact0_}
    |  \-[SQL_TOKEN] SqlFragment: 'contact0_.email as email6_, contact0_.firstName as firstName6_, contact0_.lastName as lastName6_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[x], fromElementByTableAlias=[contact0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Contact contact0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=x,role=null,tableName=Contact,tableAlias=contact0_,origin=null,columns={,className=com.capggemini.samples.applications.contacts.rest.persistence.model.Contact}}

68588 [qtp23457782-20] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
68598 [qtp23457782-20] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: SELECT x from com.capggemini.samples.applications.contacts.rest.persistence.model.Contact x
68598 [qtp23457782-20] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select contact0_.contactId as contactId6_, contact0_.email as email6_, contact0_.firstName as firstName6_, contact0_.lastName as lastName6_ from Contact contact0_
68598 [qtp23457782-20] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
68604 [qtp23457782-20] DEBUG com.capggemini.samples.applications.contacts.rest.services.ContactService  - Exiting ContactService.getContactList()
68625 [qtp23457782-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl  - Obtaining JDBC connection
68626 [qtp23457782-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl  - Obtained JDBC connection
68634 [qtp23457782-20] DEBUG org.hibernate.SQL  - select contact0_.contactId as contactId6_, contact0_.email as email6_, contact0_.firstName as firstName6_, contact0_.lastName as lastName6_ from Contact contact0_
68680 [qtp23457782-20] DEBUG org.hibernate.loader.Loader  - Result set row: 0
68684 [qtp23457782-20] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#0]
68693 [qtp23457782-20] DEBUG org.hibernate.loader.Loader  - Result set row: 1
68694 [qtp23457782-20] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#1]
68695 [qtp23457782-20] DEBUG org.hibernate.loader.Loader  - Result set row: 2
68696 [qtp23457782-20] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#2]
68697 [qtp23457782-20] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#0]
68701 [qtp23457782-20] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#0]
68702 [qtp23457782-20] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#1]
68703 [qtp23457782-20] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#1]
68703 [qtp23457782-20] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#2]
68703 [qtp23457782-20] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#2]
68704 [qtp23457782-20] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext  - Initializing non-lazy collections
122419 [qtp23457782-19] DEBUG com.capggemini.samples.applications.contacts.rest.services.ContactService  - Entering ContactService.getContactList()
122420 [qtp23457782-19] DEBUG com.capggemini.samples.applications.contacts.rest.services.ContactService  - Exiting ContactService.getContactList()
122421 [qtp23457782-19] DEBUG org.hibernate.SQL  - select contact0_.contactId as contactId6_, contact0_.email as email6_, contact0_.firstName as firstName6_, contact0_.lastName as lastName6_ from Contact contact0_
122426 [qtp23457782-19] DEBUG org.hibernate.loader.Loader  - Result set row: 0
122426 [qtp23457782-19] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#0]
122426 [qtp23457782-19] DEBUG org.hibernate.loader.Loader  - Result set row: 1
122427 [qtp23457782-19] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#1]
122429 [qtp23457782-19] DEBUG org.hibernate.loader.Loader  - Result set row: 2
122429 [qtp23457782-19] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#2]
122429 [qtp23457782-19] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext  - Initializing non-lazy collections
257305 [qtp23457782-17] DEBUG com.capggemini.samples.applications.contacts.rest.services.ContactService  - Entering ContactService.getContactList()
257306 [qtp23457782-17] DEBUG com.capggemini.samples.applications.contacts.rest.services.ContactService  - Exiting ContactService.getContactList()
257306 [qtp23457782-17] DEBUG org.hibernate.SQL  - select contact0_.contactId as contactId6_, contact0_.email as email6_, contact0_.firstName as firstName6_, contact0_.lastName as lastName6_ from Contact contact0_
257306 [qtp23457782-17] DEBUG org.hibernate.loader.Loader  - Result set row: 0
257307 [qtp23457782-17] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#0]
257307 [qtp23457782-17] DEBUG org.hibernate.loader.Loader  - Result set row: 1
257307 [qtp23457782-17] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#1]
257307 [qtp23457782-17] DEBUG org.hibernate.loader.Loader  - Result set row: 2
257308 [qtp23457782-17] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#2]
257308 [qtp23457782-17] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext  - Initializing non-lazy collections
322970 [qtp23457782-19] DEBUG com.capggemini.samples.applications.contacts.rest.services.ContactService  - Entering ContactService.getContactList()
322973 [qtp23457782-19] DEBUG com.capggemini.samples.applications.contacts.rest.services.ContactService  - Exiting ContactService.getContactList()
322974 [qtp23457782-19] DEBUG org.hibernate.SQL  - select contact0_.contactId as contactId6_, contact0_.email as email6_, contact0_.firstName as firstName6_, contact0_.lastName as lastName6_ from Contact contact0_
322975 [qtp23457782-19] DEBUG org.hibernate.loader.Loader  - Result set row: 0
322975 [qtp23457782-19] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#0]
322975 [qtp23457782-19] DEBUG org.hibernate.loader.Loader  - Result set row: 1
322975 [qtp23457782-19] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#1]
322975 [qtp23457782-19] DEBUG org.hibernate.loader.Loader  - Result set row: 2
322975 [qtp23457782-19] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#2]
322976 [qtp23457782-19] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext  - Initializing non-lazy collections
0    [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Entering Application.getSingletons()
89   [main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
167  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@2b224c
173  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@2b224c
174  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2b224c
176  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15392d5
178  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1680d52
180  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@32ddc5
183  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1aa7fe9
184  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1aa7fe9
185  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1aa7fe9
187  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@1c5eb8c
188  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@1c5eb8c
189  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c5eb8c
192  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@16da05c
193  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@16da05c
194  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@16da05c
196  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@e66cff
197  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@e66cff
198  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@e66cff
201  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1d92135
202  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1d92135
202  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1d92135
219  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@1272f68
220  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@1272f68
221  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1272f68
224  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@681952
225  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@681952
226  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@681952
234  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2bb0fd
235  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2bb0fd
237  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d7c608
238  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d7c608
240  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@10c189b
241  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@10c189b
243  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@f5d2fd
244  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@f5d2fd
247  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@1b696f0
249  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b696f0
251  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@135d34
252  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@135d34
255  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@1444c36
256  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1444c36
260  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1444c36
262  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@57f433
265  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@981654
266  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@981654
266  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@981654
268  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@141723f
270  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@128127d
271  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@128127d
273  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@757570
274  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@757570
276  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@8ec790
277  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@8ec790
280  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@1544072
281  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1544072
284  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@82c93e
285  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@82c93e
287  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@302a4b
291  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@188245d
293  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@4a90f6
294  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@4a90f6
295  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@4a90f6
297  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19ee282
298  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19ee282
299  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19ee282
300  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@33c6df
303  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@1e7ed0c
304  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@1e7ed0c
305  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@1e7ed0c
307  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@570aee
307  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@570aee
308  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@570aee
309  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@b27f91
316  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@1a6dbe5
317  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1a6dbe5
321  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1fe9d93
326  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@30ebff
327  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@30ebff
328  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@191659c
331  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@1159ee
335  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@f65bc0
336  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@f65bc0
337  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e91dff
339  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@b05e26
340  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@f530f1
341  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1603546
342  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@14991a0
342  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@f7d03f
343  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@18904b4
344  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@93d9b3
407  [main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
437  [main] INFO  org.hibernate.Version  - HHH000412: Hibernate Core {4.1.4.Final}
449  [main] INFO  org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
451  [main] INFO  org.hibernate.cfg.Environment  - HHH000021: Bytecode provider name : javassist
478  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
499  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
501  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
502  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
503  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
505  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
507  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
508  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
510  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
516  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
517  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
519  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
520  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
522  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
524  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
531  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@2b224c
532  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@2b224c
533  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2b224c
534  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15392d5
535  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1680d52
536  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@32ddc5
536  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1aa7fe9
537  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1aa7fe9
538  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1aa7fe9
539  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@1c5eb8c
539  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@1c5eb8c
540  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c5eb8c
541  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@16da05c
542  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@16da05c
542  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@16da05c
543  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@e66cff
544  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@e66cff
545  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@e66cff
545  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1d92135
546  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1d92135
546  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1d92135
547  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@1272f68
548  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@1272f68
549  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1272f68
550  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@681952
550  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@681952
551  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@681952
552  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2bb0fd
552  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2bb0fd
553  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d7c608
553  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d7c608
553  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@10c189b
554  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@10c189b
554  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@f5d2fd
554  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@f5d2fd
555  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@1b696f0
555  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b696f0
556  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@135d34
556  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@135d34
557  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@1444c36
557  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1444c36
561  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1444c36
562  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@57f433
562  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@981654
563  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@981654
563  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@981654
564  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@141723f
564  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@128127d
565  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@128127d
565  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@757570
566  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@757570
566  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@8ec790
567  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@8ec790
567  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@1544072
568  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1544072
569  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@82c93e
569  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@82c93e
570  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@302a4b
570  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@188245d
571  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@4a90f6
572  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@4a90f6
572  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@4a90f6
573  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19ee282
573  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19ee282
574  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19ee282
574  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@33c6df
575  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@1e7ed0c
575  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@1e7ed0c
575  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@1e7ed0c
576  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@570aee
577  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@570aee
577  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@570aee
578  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@b27f91
578  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@1a6dbe5
578  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1a6dbe5
579  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1fe9d93
579  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@30ebff
580  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@30ebff
580  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@191659c
580  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@1159ee
581  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@f65bc0
581  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@f65bc0
582  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1c1a5d6
583  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e9e1f
583  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4f15db
583  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@23fcd2
583  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@ab5cd0
584  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5a643c
585  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6ad196
585  [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e5dd6d
586  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
587  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
587  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
591  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
592  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
593  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
593  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
594  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
594  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
595  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
595  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
596  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
596  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
598  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
598  [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
598  [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Look up for persistence unit: contacts
734  [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
742  [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Searching mapped entities in jar/par: file:/home/frederic/Dropbox/Projects/java/contacts/target/classes/
744  [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
812  [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Java element filter matched for com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
816  [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.services.ContactService
823  [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.application.Application
830  [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
831  [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Creating Factory: contacts
846  [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
848  [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
885  [main] DEBUG org.hibernate.ejb.util.NamingHelper  - No JNDI name configured for binding Ejb3Configuration
904  [main] DEBUG org.hibernate.cfg.Configuration  - Preparing to build session factory with filters : {}
936  [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
937  [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
943  [main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
979  [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
982  [main] DEBUG org.hibernate.cfg.AnnotationBinder  - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
990  [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Contact
997  [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact on table Contact
1034 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=contactId, insertable=true, updatable=true, unique=false}
1040 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property contactId with lazy=false
1046 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for contactId
1048 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property contactId
1053 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
1054 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property email with lazy=false
1055 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for email
1056 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property email
1059 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
1060 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
1061 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
1062 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
1062 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
1063 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
1064 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
1065 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
1066 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=username, insertable=true, updatable=true, unique=false}
1066 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
1067 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
1068 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
1070 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for contactId
1072 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for email
1073 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for firstName
1073 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for lastName
1074 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for username
1075 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
1077 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
1078 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
1079 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
1080 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
1080 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
1081 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
1110 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000402: Using Hibernate built-in connection pool (not for production use!)
1114 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 20
1115 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000006: Autocommit mode: true
1116 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000401: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db/contacts]
1120 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000046: Connection properties: {user=sa, autocommit=true, release_mode=auto}
1195 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Opening new JDBC connection
1717 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Created connection to: jdbc:hsqldb:file:db/contacts, Isolation Level: 2
1735 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Database ->
       name : HSQL Database Engine
    version : 1.8.0
      major : 1
      minor : 8
1737 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Driver ->
       name : HSQL Database Engine Driver
    version : 1.8.0
      major : 1
      minor : 8
1737 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - JDBC version : 3.0
1775 [main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
1792 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder  - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
1806 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic flush during beforeCompletion(): disabled
1808 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic session close at end of transaction: disabled
1811 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch size: 15
1812 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch updates for versioned data: disabled
1813 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Scrollable result sets: enabled
1813 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Wrap result sets: disabled
1814 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC3 getGeneratedKeys(): disabled
1815 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Connection release mode: auto
1815 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator  - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
1819 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default batch fetch size: 1
1820 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Generate SQL with comments: disabled
1821 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL updates by primary key: disabled
1822 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL inserts for batching: disabled
1823 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
1826 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  - HHH000397: Using ASTQueryTranslatorFactory
1827 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query language substitutions: {}
1828 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JPA-QL strict compliance: enabled
1829 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Second-level cache: enabled
1829 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query cache: disabled
1830 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
1832 [main] DEBUG org.hibernate.cfg.SettingsFactory  - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
1833 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Optimize cache for minimal puts: disabled
1833 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Structured second-level cache entries: disabled
1834 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Statistics: disabled
1835 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Deleted entity synthetic identifier rollback: disabled
1836 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default entity-mode: pojo
1836 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Named query checking : enabled
1837 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
1838 [main] DEBUG org.hibernate.cfg.SettingsFactory  - multi-tenancy strategy : NONE
1861 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
1877 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
1883 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:hsqldb:file:db/contacts, sun.management.compiler=HotSpot Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, hibernate.transaction.flush_before_completion=false, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/resources.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rt.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jsse.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jce.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/charsets.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/netx.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/plugin.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rhino.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jfr.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_15-b20, hibernate.connection.autocommit=true, javax.persistence.jdbc.user=sa, user.name=frederic, guice.disable.misplaced.annotation.check=true, hibernate.connection.release_mode=auto, user.language=fr, sun.boot.library.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/i386, classworlds.conf=/opt/tools/java/tools/maven/3.0.5/bin/m2.conf, java.version=1.7.0_15, user.timezone=Europe/Paris, sun.arch.data.model=32, java.endorsed.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=FR, securerandom.source=file:/dev/./urandom, java.home=/usr/lib/jvm/java-7-openjdk-i386/jre, java.vm.info=mixed mode, os.version=3.2.0-39-generic-pae, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=:, java.vm.version=23.7-b01, javax.persistence.jdbc.url=jdbc:hsqldb:file:db/contacts, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.X11.XToolkit, hibernate.connection.username=sa, user.home=/home/frederic, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=/usr/java/packages/lib/i386:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vm.vendor=Oracle Corporation, maven.home=/opt/tools/java/tools/maven/3.0.5, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/opt/tools/java/tools/maven/3.0.5/boot/plexus-classworlds-2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.7, sun.cpu.endian=little, javax.persistence.jdbc.driver=org.hsqldb.jdbcDriver, sun.os.patch.level=unknown, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=i386, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/ext:/usr/java/packages/lib/ext, javax.persistence.jdbc.password=, user.dir=/home/frederic/Dropbox/Projects/java/contacts, line.separator=
, java.vm.name=OpenJDK Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
1986 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
2080 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2080 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select contactId from Contact where contactId =?
2081 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select contact_.contactId, contact_.email as email0_, contact_.firstName as firstName0_, contact_.lastName as lastName0_, contact_.username as username0_ from Contact contact_ where contact_.contactId=?
2081 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Contact (email, firstName, lastName, username, contactId) values (?, ?, ?, ?, ?)
2081 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Contact set email=?, firstName=?, lastName=?, username=? where contactId=?
2081 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Contact where contactId=?
2081 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into Contact (contactId, email, firstName, lastName, username) values (null, ?, ?, ?, ?)
2100 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [NONE]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_, contact0_.username as username0_0_ from Contact contact0_ where contact0_.contactId=?
2101 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [READ]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_, contact0_.username as username0_0_ from Contact contact0_ where contact0_.contactId=?
2103 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_, contact0_.username as username0_0_ from Contact contact0_ where contact0_.contactId=?
2103 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE_NOWAIT]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_, contact0_.username as username0_0_ from Contact contact0_ where contact0_.contactId=?
2104 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [FORCE]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_, contact0_.username as username0_0_ from Contact contact0_ where contact0_.contactId=?
2104 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_READ]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_, contact0_.username as username0_0_ from Contact contact0_ where contact0_.contactId=?
2104 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_WRITE]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_, contact0_.username as username0_0_ from Contact contact0_ where contact0_.contactId=?
2105 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_, contact0_.username as username0_0_ from Contact contact0_ where contact0_.contactId=?
2105 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_, contact0_.username as username0_0_ from Contact contact0_ where contact0_.contactId=?
2105 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_, contact0_.username as username0_0_ from Contact contact0_ where contact0_.contactId=?
2113 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_, contact0_.username as username0_0_ from Contact contact0_ where contact0_.contactId=?
2114 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId0_0_, contact0_.email as email0_0_, contact0_.firstName as firstName0_0_, contact0_.lastName as lastName0_0_, contact0_.username as username0_0_ from Contact contact0_ where contact0_.contactId=?
2119 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@ab0975
2126 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: e1282109-56e9-4450-9f11-1417eb9623ce (<unnamed>)
2127 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
2128 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
2135 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000228: Running hbm2ddl schema update
2135 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000102: Fetching database metadata
2139 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000396: Updating schema
2140 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
2140 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
2141 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
2141 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2141 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2141 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
2141 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
2141 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
2141 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
2192 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000261: Table found: PUBLIC.CONTACT
2192 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000037: Columns: [email, lastname, firstname, contactid]
2192 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000108: Foreign keys: []
2193 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000126: Indexes: [sys_idx_46]
2193 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
2193 [main] DEBUG org.hibernate.tool.hbm2ddl.SchemaUpdate  - alter table Contact add column username varchar(255)
2196 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000232: Schema update complete
2196 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named HQL queries
2197 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named SQL queries
2202 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
2250 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@1590030
2250 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - Registering EntityManagerFactory: contacts 
2319 [main] DEBUG org.hibernate.internal.SessionImpl  - Opened session at timestamp: 13654581303
2323 [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Exiting Application.getSingletons()
2323 [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Entering Application.getSingletons()
2324 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@2b224c
2324 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@2b224c
2324 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2b224c
2324 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15392d5
2324 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1680d52
2324 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@32ddc5
2324 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1aa7fe9
2325 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1aa7fe9
2325 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1aa7fe9
2325 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@1c5eb8c
2325 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@1c5eb8c
2325 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c5eb8c
2325 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@16da05c
2326 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@16da05c
2326 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@16da05c
2326 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@e66cff
2326 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@e66cff
2326 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@e66cff
2326 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1d92135
2327 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1d92135
2327 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1d92135
2327 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@1272f68
2327 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@1272f68
2327 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1272f68
2327 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@681952
2327 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@681952
2328 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@681952
2328 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2bb0fd
2328 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2bb0fd
2328 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d7c608
2328 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d7c608
2328 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@10c189b
2329 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@10c189b
2329 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@f5d2fd
2329 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@f5d2fd
2329 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@1b696f0
2329 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b696f0
2329 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@135d34
2329 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@135d34
2330 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@1444c36
2330 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1444c36
2330 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1444c36
2330 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@57f433
2330 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@981654
2330 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@981654
2331 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@981654
2331 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@141723f
2331 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@128127d
2331 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@128127d
2331 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@757570
2331 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@757570
2335 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@8ec790
2336 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@8ec790
2336 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@1544072
2336 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1544072
2337 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@82c93e
2337 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@82c93e
2337 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@302a4b
2337 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@188245d
2338 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@4a90f6
2338 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@4a90f6
2338 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@4a90f6
2338 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19ee282
2338 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19ee282
2338 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19ee282
2338 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@33c6df
2338 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@1e7ed0c
2339 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@1e7ed0c
2339 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@1e7ed0c
2339 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@570aee
2339 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@570aee
2339 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@570aee
2339 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@b27f91
2339 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@1a6dbe5
2339 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1a6dbe5
2339 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1fe9d93
2339 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@30ebff
2340 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@30ebff
2340 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@191659c
2340 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@1159ee
2341 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@f65bc0
2342 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@f65bc0
2343 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@13cf5e3
2343 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@133245c
2344 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@9848f2
2344 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1dd302d
2345 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@8613bb
2346 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@796bb2
2347 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@18d7b91
2347 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1ab769e
2348 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2349 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2349 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2350 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2351 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2351 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2352 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2352 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2353 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2355 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2356 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2357 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2358 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2358 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2359 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2360 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Look up for persistence unit: contacts
2388 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
2389 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Searching mapped entities in jar/par: file:/home/frederic/Dropbox/Projects/java/contacts/target/classes/
2390 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2391 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Java element filter matched for com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2392 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.services.ContactService
2394 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.application.Application
2405 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
2406 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Creating Factory: contacts
2407 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2407 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
2409 [main] DEBUG org.hibernate.ejb.util.NamingHelper  - No JNDI name configured for binding Ejb3Configuration
2410 [main] DEBUG org.hibernate.cfg.Configuration  - Preparing to build session factory with filters : {}
2411 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
2412 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
2413 [main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2417 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2418 [main] DEBUG org.hibernate.cfg.AnnotationBinder  - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2418 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Contact
2419 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact on table Contact
2421 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=contactId, insertable=true, updatable=true, unique=false}
2422 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property contactId with lazy=false
2423 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for contactId
2423 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property contactId
2424 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
2425 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property email with lazy=false
2426 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for email
2426 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property email
2427 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
2429 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
2435 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
2436 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
2446 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
2446 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
2446 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
2446 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
2447 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=username, insertable=true, updatable=true, unique=false}
2447 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
2447 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
2447 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
2447 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for contactId
2447 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for email
2448 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for firstName
2448 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for lastName
2448 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for username
2448 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
2448 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2448 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2448 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
2448 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
2449 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
2449 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
2449 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2451 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 20
2452 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000006: Autocommit mode: true
2452 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000401: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db/contacts]
2452 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000046: Connection properties: {user=sa, autocommit=true, release_mode=auto}
2452 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Opening new JDBC connection
2453 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Created connection to: jdbc:hsqldb:file:db/contacts, Isolation Level: 2
2453 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Database ->
       name : HSQL Database Engine
    version : 1.8.0
      major : 1
      minor : 8
2465 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Driver ->
       name : HSQL Database Engine Driver
    version : 1.8.0
      major : 1
      minor : 8
2465 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - JDBC version : 3.0
2471 [main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2472 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder  - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2473 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic flush during beforeCompletion(): disabled
2474 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic session close at end of transaction: disabled
2474 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch size: 15
2474 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch updates for versioned data: disabled
2474 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Scrollable result sets: enabled
2475 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Wrap result sets: disabled
2475 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC3 getGeneratedKeys(): disabled
2475 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Connection release mode: auto
2475 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator  - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2475 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default batch fetch size: 1
2475 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Generate SQL with comments: disabled
2476 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL updates by primary key: disabled
2476 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL inserts for batching: disabled
2476 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2476 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  - HHH000397: Using ASTQueryTranslatorFactory
2476 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query language substitutions: {}
2476 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JPA-QL strict compliance: enabled
2476 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Second-level cache: enabled
2477 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query cache: disabled
2477 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2477 [main] DEBUG org.hibernate.cfg.SettingsFactory  - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2477 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Optimize cache for minimal puts: disabled
2477 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Structured second-level cache entries: disabled
2477 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Statistics: disabled
2478 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Deleted entity synthetic identifier rollback: disabled
2478 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default entity-mode: pojo
2478 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Named query checking : enabled
2478 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2478 [main] DEBUG org.hibernate.cfg.SettingsFactory  - multi-tenancy strategy : NONE
2478 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
2479 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
2479 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:hsqldb:file:db/contacts, sun.management.compiler=HotSpot Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, hibernate.transaction.flush_before_completion=false, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/resources.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rt.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jsse.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jce.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/charsets.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/netx.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/plugin.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rhino.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jfr.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_15-b20, hibernate.connection.autocommit=true, javax.persistence.jdbc.user=sa, user.name=frederic, guice.disable.misplaced.annotation.check=true, hibernate.connection.release_mode=auto, user.language=fr, sun.boot.library.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/i386, classworlds.conf=/opt/tools/java/tools/maven/3.0.5/bin/m2.conf, java.version=1.7.0_15, user.timezone=Europe/Paris, sun.arch.data.model=32, java.endorsed.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=FR, securerandom.source=file:/dev/./urandom, java.home=/usr/lib/jvm/java-7-openjdk-i386/jre, java.vm.info=mixed mode, os.version=3.2.0-39-generic-pae, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=:, java.vm.version=23.7-b01, javax.persistence.jdbc.url=jdbc:hsqldb:file:db/contacts, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.X11.XToolkit, hibernate.connection.username=sa, user.home=/home/frederic, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=/usr/java/packages/lib/i386:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vm.vendor=Oracle Corporation, maven.home=/opt/tools/java/tools/maven/3.0.5, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/opt/tools/java/tools/maven/3.0.5/boot/plexus-classworlds-2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.7, sun.cpu.endian=little, javax.persistence.jdbc.driver=org.hsqldb.jdbcDriver, sun.os.patch.level=unknown, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=i386, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/ext:/usr/java/packages/lib/ext, javax.persistence.jdbc.password=, user.dir=/home/frederic/Dropbox/Projects/java/contacts, line.separator=
, java.vm.name=OpenJDK Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
2481 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
2483 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2483 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select contactId from Contact where contactId =?
2484 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select contact_.contactId, contact_.email as email2_, contact_.firstName as firstName2_, contact_.lastName as lastName2_, contact_.username as username2_ from Contact contact_ where contact_.contactId=?
2484 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Contact (email, firstName, lastName, username, contactId) values (?, ?, ?, ?, ?)
2484 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Contact set email=?, firstName=?, lastName=?, username=? where contactId=?
2484 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Contact where contactId=?
2484 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into Contact (contactId, email, firstName, lastName, username) values (null, ?, ?, ?, ?)
2484 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [NONE]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_, contact0_.username as username2_0_ from Contact contact0_ where contact0_.contactId=?
2485 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [READ]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_, contact0_.username as username2_0_ from Contact contact0_ where contact0_.contactId=?
2485 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_, contact0_.username as username2_0_ from Contact contact0_ where contact0_.contactId=?
2485 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE_NOWAIT]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_, contact0_.username as username2_0_ from Contact contact0_ where contact0_.contactId=?
2486 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [FORCE]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_, contact0_.username as username2_0_ from Contact contact0_ where contact0_.contactId=?
2486 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_READ]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_, contact0_.username as username2_0_ from Contact contact0_ where contact0_.contactId=?
2486 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_WRITE]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_, contact0_.username as username2_0_ from Contact contact0_ where contact0_.contactId=?
2486 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_, contact0_.username as username2_0_ from Contact contact0_ where contact0_.contactId=?
2487 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_, contact0_.username as username2_0_ from Contact contact0_ where contact0_.contactId=?
2487 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_, contact0_.username as username2_0_ from Contact contact0_ where contact0_.contactId=?
2487 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_, contact0_.username as username2_0_ from Contact contact0_ where contact0_.contactId=?
2488 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId2_0_, contact0_.email as email2_0_, contact0_.firstName as firstName2_0_, contact0_.lastName as lastName2_0_, contact0_.username as username2_0_ from Contact contact0_ where contact0_.contactId=?
2490 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: f833457a-1792-42b8-8d3c-113eda6a3fc2 (<unnamed>)
2490 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
2491 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
2491 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000228: Running hbm2ddl schema update
2492 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000102: Fetching database metadata
2493 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000396: Updating schema
2494 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
2494 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
2495 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
2495 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2496 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2497 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
2497 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
2497 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
2499 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
2532 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000261: Table found: PUBLIC.CONTACT
2533 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000037: Columns: [username, email, lastname, firstname, contactid]
2534 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000108: Foreign keys: []
2534 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000126: Indexes: [sys_idx_46]
2534 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
2534 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000232: Schema update complete
2534 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named HQL queries
2534 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named SQL queries
2535 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
2536 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - Registering EntityManagerFactory: contacts 
2536 [main] WARN  org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - HHH000436: Entity manager factory name (contacts) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
2536 [main] DEBUG org.hibernate.internal.SessionImpl  - Opened session at timestamp: 13654581306
2537 [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Exiting Application.getSingletons()
2537 [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Entering Application.getSingletons()
2538 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@2b224c
2538 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@2b224c
2538 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2b224c
2538 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15392d5
2538 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1680d52
2538 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@32ddc5
2538 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1aa7fe9
2539 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1aa7fe9
2539 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1aa7fe9
2539 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@1c5eb8c
2539 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@1c5eb8c
2539 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c5eb8c
2539 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@16da05c
2539 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@16da05c
2540 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@16da05c
2540 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@e66cff
2540 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@e66cff
2540 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@e66cff
2540 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1d92135
2541 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1d92135
2541 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1d92135
2541 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@1272f68
2541 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@1272f68
2541 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1272f68
2541 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@681952
2542 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@681952
2542 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@681952
2542 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2bb0fd
2542 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2bb0fd
2542 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d7c608
2542 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d7c608
2543 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@10c189b
2543 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@10c189b
2543 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@f5d2fd
2543 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@f5d2fd
2543 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@1b696f0
2543 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b696f0
2543 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@135d34
2544 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@135d34
2544 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@1444c36
2544 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1444c36
2544 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1444c36
2544 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@57f433
2544 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@981654
2545 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@981654
2545 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@981654
2545 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@141723f
2545 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@128127d
2545 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@128127d
2545 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@757570
2545 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@757570
2546 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@8ec790
2546 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@8ec790
2546 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@1544072
2546 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1544072
2546 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@82c93e
2546 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@82c93e
2547 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@302a4b
2547 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@188245d
2547 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@4a90f6
2547 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@4a90f6
2547 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@4a90f6
2547 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19ee282
2547 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19ee282
2548 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19ee282
2548 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@33c6df
2549 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@1e7ed0c
2549 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@1e7ed0c
2549 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@1e7ed0c
2549 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@570aee
2550 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@570aee
2550 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@570aee
2550 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@b27f91
2550 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@1a6dbe5
2550 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1a6dbe5
2550 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1fe9d93
2550 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@30ebff
2551 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@30ebff
2551 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@191659c
2551 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@1159ee
2551 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@f65bc0
2551 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@f65bc0
2551 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@18c752a
2552 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@604e89
2552 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c4069d
2552 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18e55d1
2552 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1a420a0
2552 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5a22a9
2552 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@199ad6e
2553 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@495234
2553 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2553 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2553 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2553 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2553 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2554 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2554 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2554 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2554 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2554 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2554 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2554 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2555 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2555 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2555 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2555 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Look up for persistence unit: contacts
2618 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
2618 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Searching mapped entities in jar/par: file:/home/frederic/Dropbox/Projects/java/contacts/target/classes/
2619 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2620 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Java element filter matched for com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2620 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.services.ContactService
2621 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.application.Application
2622 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
2622 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Creating Factory: contacts
2623 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2623 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
2625 [main] DEBUG org.hibernate.ejb.util.NamingHelper  - No JNDI name configured for binding Ejb3Configuration
2625 [main] DEBUG org.hibernate.cfg.Configuration  - Preparing to build session factory with filters : {}
2625 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
2625 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
2625 [main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2626 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2626 [main] DEBUG org.hibernate.cfg.AnnotationBinder  - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2626 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Contact
2626 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact on table Contact
2627 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=contactId, insertable=true, updatable=true, unique=false}
2627 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property contactId with lazy=false
2628 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for contactId
2628 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property contactId
2628 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
2628 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property email with lazy=false
2628 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for email
2628 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property email
2629 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
2629 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
2629 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
2629 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
2630 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
2630 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
2630 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
2630 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
2631 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=username, insertable=true, updatable=true, unique=false}
2632 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
2632 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
2632 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
2632 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for contactId
2632 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for email
2632 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for firstName
2632 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for lastName
2632 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for username
2632 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
2632 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2632 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2633 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
2633 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
2633 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
2633 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
2633 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2633 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 20
2633 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000006: Autocommit mode: true
2634 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000401: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db/contacts]
2634 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000046: Connection properties: {user=sa, autocommit=true, release_mode=auto}
2634 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Opening new JDBC connection
2634 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Created connection to: jdbc:hsqldb:file:db/contacts, Isolation Level: 2
2635 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Database ->
       name : HSQL Database Engine
    version : 1.8.0
      major : 1
      minor : 8
2635 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Driver ->
       name : HSQL Database Engine Driver
    version : 1.8.0
      major : 1
      minor : 8
2635 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - JDBC version : 3.0
2636 [main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2637 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder  - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2638 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic flush during beforeCompletion(): disabled
2638 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic session close at end of transaction: disabled
2639 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch size: 15
2639 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch updates for versioned data: disabled
2640 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Scrollable result sets: enabled
2641 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Wrap result sets: disabled
2641 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC3 getGeneratedKeys(): disabled
2641 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Connection release mode: auto
2641 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator  - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2641 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default batch fetch size: 1
2642 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Generate SQL with comments: disabled
2642 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL updates by primary key: disabled
2642 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL inserts for batching: disabled
2642 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2642 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  - HHH000397: Using ASTQueryTranslatorFactory
2642 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query language substitutions: {}
2642 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JPA-QL strict compliance: enabled
2643 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Second-level cache: enabled
2643 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query cache: disabled
2643 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2643 [main] DEBUG org.hibernate.cfg.SettingsFactory  - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2643 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Optimize cache for minimal puts: disabled
2643 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Structured second-level cache entries: disabled
2643 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Statistics: disabled
2644 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Deleted entity synthetic identifier rollback: disabled
2649 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default entity-mode: pojo
2649 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Named query checking : enabled
2650 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2650 [main] DEBUG org.hibernate.cfg.SettingsFactory  - multi-tenancy strategy : NONE
2650 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
2651 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
2651 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:hsqldb:file:db/contacts, sun.management.compiler=HotSpot Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, hibernate.transaction.flush_before_completion=false, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/resources.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rt.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jsse.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jce.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/charsets.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/netx.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/plugin.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rhino.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jfr.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_15-b20, hibernate.connection.autocommit=true, javax.persistence.jdbc.user=sa, user.name=frederic, guice.disable.misplaced.annotation.check=true, hibernate.connection.release_mode=auto, user.language=fr, sun.boot.library.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/i386, classworlds.conf=/opt/tools/java/tools/maven/3.0.5/bin/m2.conf, java.version=1.7.0_15, user.timezone=Europe/Paris, sun.arch.data.model=32, java.endorsed.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=FR, securerandom.source=file:/dev/./urandom, java.home=/usr/lib/jvm/java-7-openjdk-i386/jre, java.vm.info=mixed mode, os.version=3.2.0-39-generic-pae, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=:, java.vm.version=23.7-b01, javax.persistence.jdbc.url=jdbc:hsqldb:file:db/contacts, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.X11.XToolkit, hibernate.connection.username=sa, user.home=/home/frederic, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=/usr/java/packages/lib/i386:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vm.vendor=Oracle Corporation, maven.home=/opt/tools/java/tools/maven/3.0.5, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/opt/tools/java/tools/maven/3.0.5/boot/plexus-classworlds-2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.7, sun.cpu.endian=little, javax.persistence.jdbc.driver=org.hsqldb.jdbcDriver, sun.os.patch.level=unknown, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=i386, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/ext:/usr/java/packages/lib/ext, javax.persistence.jdbc.password=, user.dir=/home/frederic/Dropbox/Projects/java/contacts, line.separator=
, java.vm.name=OpenJDK Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
2654 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
2655 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2656 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select contactId from Contact where contactId =?
2656 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select contact_.contactId, contact_.email as email4_, contact_.firstName as firstName4_, contact_.lastName as lastName4_, contact_.username as username4_ from Contact contact_ where contact_.contactId=?
2656 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Contact (email, firstName, lastName, username, contactId) values (?, ?, ?, ?, ?)
2656 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Contact set email=?, firstName=?, lastName=?, username=? where contactId=?
2656 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Contact where contactId=?
2656 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into Contact (contactId, email, firstName, lastName, username) values (null, ?, ?, ?, ?)
2657 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [NONE]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_, contact0_.username as username4_0_ from Contact contact0_ where contact0_.contactId=?
2657 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [READ]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_, contact0_.username as username4_0_ from Contact contact0_ where contact0_.contactId=?
2657 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_, contact0_.username as username4_0_ from Contact contact0_ where contact0_.contactId=?
2657 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE_NOWAIT]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_, contact0_.username as username4_0_ from Contact contact0_ where contact0_.contactId=?
2658 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [FORCE]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_, contact0_.username as username4_0_ from Contact contact0_ where contact0_.contactId=?
2658 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_READ]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_, contact0_.username as username4_0_ from Contact contact0_ where contact0_.contactId=?
2658 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_WRITE]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_, contact0_.username as username4_0_ from Contact contact0_ where contact0_.contactId=?
2659 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_, contact0_.username as username4_0_ from Contact contact0_ where contact0_.contactId=?
2659 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_, contact0_.username as username4_0_ from Contact contact0_ where contact0_.contactId=?
2659 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_, contact0_.username as username4_0_ from Contact contact0_ where contact0_.contactId=?
2659 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_, contact0_.username as username4_0_ from Contact contact0_ where contact0_.contactId=?
2660 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId4_0_, contact0_.email as email4_0_, contact0_.firstName as firstName4_0_, contact0_.lastName as lastName4_0_, contact0_.username as username4_0_ from Contact contact0_ where contact0_.contactId=?
2660 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: eec66ea7-2c0a-4a8b-ae0f-27f6fd4150c7 (<unnamed>)
2660 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
2660 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
2660 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000228: Running hbm2ddl schema update
2660 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000102: Fetching database metadata
2661 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000396: Updating schema
2661 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
2661 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
2661 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
2661 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2661 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2661 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
2662 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
2662 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
2662 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
2683 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000261: Table found: PUBLIC.CONTACT
2684 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000037: Columns: [username, email, lastname, firstname, contactid]
2685 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000108: Foreign keys: []
2685 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000126: Indexes: [sys_idx_46]
2686 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
2687 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000232: Schema update complete
2687 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named HQL queries
2688 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named SQL queries
2689 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
2691 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - Registering EntityManagerFactory: contacts 
2692 [main] WARN  org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - HHH000436: Entity manager factory name (contacts) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
2692 [main] DEBUG org.hibernate.internal.SessionImpl  - Opened session at timestamp: 13654581307
2693 [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Exiting Application.getSingletons()
2694 [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Entering Application.getSingletons()
2694 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@2b224c
2696 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@2b224c
2697 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2b224c
2697 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15392d5
2698 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1680d52
2699 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@32ddc5
2699 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1aa7fe9
2700 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@1aa7fe9
2701 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1aa7fe9
2701 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@1c5eb8c
2702 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@1c5eb8c
2703 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c5eb8c
2703 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@16da05c
2704 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@16da05c
2705 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@16da05c
2705 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@e66cff
2706 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@e66cff
2706 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@e66cff
2707 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1d92135
2708 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1d92135
2708 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1d92135
2709 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@1272f68
2710 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@1272f68
2710 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1272f68
2711 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@681952
2711 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@681952
2712 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@681952
2712 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2bb0fd
2713 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2bb0fd
2713 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d7c608
2714 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d7c608
2714 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@10c189b
2714 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@10c189b
2715 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@f5d2fd
2715 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@f5d2fd
2715 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@1b696f0
2716 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b696f0
2716 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@135d34
2717 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@135d34
2717 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@1444c36
2717 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1444c36
2717 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1444c36
2718 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@57f433
2718 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@981654
2719 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@981654
2719 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@981654
2719 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@141723f
2724 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@128127d
2725 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@128127d
2726 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@757570
2726 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@757570
2727 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@8ec790
2727 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@8ec790
2728 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@1544072
2729 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1544072
2729 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@82c93e
2730 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@82c93e
2731 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@302a4b
2731 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@188245d
2732 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@4a90f6
2733 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@4a90f6
2733 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@4a90f6
2733 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19ee282
2734 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19ee282
2735 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19ee282
2736 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@33c6df
2736 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@1e7ed0c
2737 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@1e7ed0c
2737 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@1e7ed0c
2737 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@570aee
2738 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@570aee
2738 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@570aee
2738 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@b27f91
2739 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@1a6dbe5
2739 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1a6dbe5
2739 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1fe9d93
2740 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@30ebff
2740 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@30ebff
2741 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@191659c
2741 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@1159ee
2742 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@f65bc0
2742 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@f65bc0
2743 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@ea3dff
2743 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@8c55bf
2744 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1517402
2745 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@973101
2746 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@126617
2746 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1ec87a2
2747 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1bcba63
2748 [main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@170e695
2749 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2749 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2750 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2751 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2751 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2751 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2752 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2752 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2753 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2753 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2754 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2754 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2755 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2755 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2755 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2756 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Look up for persistence unit: contacts
2874 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
2875 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Searching mapped entities in jar/par: file:/home/frederic/Dropbox/Projects/java/contacts/target/classes/
2876 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2880 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Java element filter matched for com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2881 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.services.ContactService
2886 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor  - Filtering: com.capggemini.samples.applications.contacts.rest.application.Application
2887 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Detect class: true; detect hbm: true
2887 [main] DEBUG org.hibernate.ejb.Ejb3Configuration  - Creating Factory: contacts
2888 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2888 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
2889 [main] DEBUG org.hibernate.ejb.util.NamingHelper  - No JNDI name configured for binding Ejb3Configuration
2890 [main] DEBUG org.hibernate.cfg.Configuration  - Preparing to build session factory with filters : {}
2890 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
2890 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
2890 [main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2890 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2890 [main] DEBUG org.hibernate.cfg.AnnotationBinder  - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
2890 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Contact
2890 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact on table Contact
2891 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=contactId, insertable=true, updatable=true, unique=false}
2891 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property contactId with lazy=false
2891 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for contactId
2892 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property contactId
2892 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=email, insertable=true, updatable=true, unique=false}
2892 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property email with lazy=false
2892 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for email
2892 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property email
2895 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
2895 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
2895 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
2896 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
2897 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
2897 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
2897 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
2897 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
2897 [main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Contact), mappingColumn=username, insertable=true, updatable=true, unique=false}
2897 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
2897 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
2897 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
2897 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for contactId
2898 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for email
2898 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for firstName
2898 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for lastName
2898 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Setting SimpleValue typeName for username
2898 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
2898 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2898 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2898 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
2898 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
2898 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
2898 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
2899 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000402: Using Hibernate built-in connection pool (not for production use!)
2899 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 20
2899 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000006: Autocommit mode: true
2899 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000401: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:file:db/contacts]
2899 [main] INFO  org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000046: Connection properties: {user=sa, autocommit=true, release_mode=auto}
2899 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Opening new JDBC connection
2900 [main] DEBUG org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Created connection to: jdbc:hsqldb:file:db/contacts, Isolation Level: 2
2900 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Database ->
       name : HSQL Database Engine
    version : 1.8.0
      major : 1
      minor : 8
2900 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - Driver ->
       name : HSQL Database Engine Driver
    version : 1.8.0
      major : 1
      minor : 8
2900 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl  - JDBC version : 3.0
2901 [main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2909 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder  - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2910 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic flush during beforeCompletion(): disabled
2911 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Automatic session close at end of transaction: disabled
2911 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch size: 15
2911 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC batch updates for versioned data: disabled
2911 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Scrollable result sets: enabled
2911 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Wrap result sets: disabled
2911 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JDBC3 getGeneratedKeys(): disabled
2911 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Connection release mode: auto
2911 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator  - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2911 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default batch fetch size: 1
2911 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Generate SQL with comments: disabled
2912 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL updates by primary key: disabled
2912 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Order SQL inserts for batching: disabled
2912 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2912 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory  - HHH000397: Using ASTQueryTranslatorFactory
2912 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query language substitutions: {}
2915 [main] DEBUG org.hibernate.cfg.SettingsFactory  - JPA-QL strict compliance: enabled
2915 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Second-level cache: enabled
2915 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Query cache: disabled
2915 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2916 [main] DEBUG org.hibernate.cfg.SettingsFactory  - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2916 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Optimize cache for minimal puts: disabled
2916 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Structured second-level cache entries: disabled
2916 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Statistics: disabled
2916 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Deleted entity synthetic identifier rollback: disabled
2916 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Default entity-mode: pojo
2916 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Named query checking : enabled
2916 [main] DEBUG org.hibernate.cfg.SettingsFactory  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2916 [main] DEBUG org.hibernate.cfg.SettingsFactory  - multi-tenancy strategy : NONE
2916 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
2917 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
2917 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:hsqldb:file:db/contacts, sun.management.compiler=HotSpot Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, hibernate.transaction.flush_before_completion=false, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/resources.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rt.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jsse.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jce.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/charsets.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/netx.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/plugin.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rhino.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/lib/jfr.jar:/usr/lib/jvm/java-7-openjdk-i386/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_15-b20, hibernate.connection.autocommit=true, javax.persistence.jdbc.user=sa, user.name=frederic, guice.disable.misplaced.annotation.check=true, hibernate.connection.release_mode=auto, user.language=fr, sun.boot.library.path=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/i386, classworlds.conf=/opt/tools/java/tools/maven/3.0.5/bin/m2.conf, java.version=1.7.0_15, user.timezone=Europe/Paris, sun.arch.data.model=32, java.endorsed.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=FR, securerandom.source=file:/dev/./urandom, java.home=/usr/lib/jvm/java-7-openjdk-i386/jre, java.vm.info=mixed mode, os.version=3.2.0-39-generic-pae, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=:, java.vm.version=23.7-b01, javax.persistence.jdbc.url=jdbc:hsqldb:file:db/contacts, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.X11.XToolkit, hibernate.connection.username=sa, user.home=/home/frederic, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=/usr/java/packages/lib/i386:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vm.vendor=Oracle Corporation, maven.home=/opt/tools/java/tools/maven/3.0.5, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher jetty:run, java.class.path=/opt/tools/java/tools/maven/3.0.5/boot/plexus-classworlds-2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.7, sun.cpu.endian=little, javax.persistence.jdbc.driver=org.hsqldb.jdbcDriver, sun.os.patch.level=unknown, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=i386, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-7-openjdk-i386/jre/lib/ext:/usr/java/packages/lib/ext, javax.persistence.jdbc.password=, user.dir=/home/frederic/Dropbox/Projects/java/contacts, line.separator=
, java.vm.name=OpenJDK Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
2919 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
2926 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.capggemini.samples.applications.contacts.rest.persistence.model.Contact
2926 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select contactId from Contact where contactId =?
2926 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select contact_.contactId, contact_.email as email6_, contact_.firstName as firstName6_, contact_.lastName as lastName6_, contact_.username as username6_ from Contact contact_ where contact_.contactId=?
2926 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Contact (email, firstName, lastName, username, contactId) values (?, ?, ?, ?, ?)
2926 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Contact set email=?, firstName=?, lastName=?, username=? where contactId=?
2927 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Contact where contactId=?
2927 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into Contact (contactId, email, firstName, lastName, username) values (null, ?, ?, ?, ?)
2929 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [NONE]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_, contact0_.username as username6_0_ from Contact contact0_ where contact0_.contactId=?
2932 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [READ]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_, contact0_.username as username6_0_ from Contact contact0_ where contact0_.contactId=?
2933 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_, contact0_.username as username6_0_ from Contact contact0_ where contact0_.contactId=?
2933 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [UPGRADE_NOWAIT]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_, contact0_.username as username6_0_ from Contact contact0_ where contact0_.contactId=?
2933 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [FORCE]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_, contact0_.username as username6_0_ from Contact contact0_ where contact0_.contactId=?
2933 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_READ]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_, contact0_.username as username6_0_ from Contact contact0_ where contact0_.contactId=?
2934 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_WRITE]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_, contact0_.username as username6_0_ from Contact contact0_ where contact0_.contactId=?
2934 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [PESSIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_, contact0_.username as username6_0_ from Contact contact0_ where contact0_.contactId=?
2934 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_, contact0_.username as username6_0_ from Contact contact0_ where contact0_.contactId=?
2934 [main] DEBUG org.hibernate.loader.Loader  - Static select for entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact [OPTIMISTIC_FORCE_INCREMENT]: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_, contact0_.username as username6_0_ from Contact contact0_ where contact0_.contactId=?
2934 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_, contact0_.username as username6_0_ from Contact contact0_ where contact0_.contactId=?
2935 [main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.capggemini.samples.applications.contacts.rest.persistence.model.Contact: select contact0_.contactId as contactId6_0_, contact0_.email as email6_0_, contact0_.firstName as firstName6_0_, contact0_.lastName as lastName6_0_, contact0_.username as username6_0_ from Contact contact0_ where contact0_.contactId=?
2957 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 02677cb6-7e4c-4f67-b3e4-77b5883fa382 (<unnamed>)
2957 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
2957 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
2957 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000228: Running hbm2ddl schema update
2957 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000102: Fetching database metadata
2957 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000396: Updating schema
2957 [main] DEBUG org.hibernate.cfg.Configuration  - Processing hbm.xml files
2957 [main] DEBUG org.hibernate.cfg.Configuration  - Process annotated classes
2957 [main] DEBUG org.hibernate.cfg.Configuration  - Processing fk mappings (*ToOne and JoinedSubclass)
2957 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2958 [main] DEBUG org.hibernate.cfg.Configuration  - Processing extends queue
2958 [main] DEBUG org.hibernate.cfg.Configuration  - Processing collection mappings
2958 [main] DEBUG org.hibernate.cfg.Configuration  - Processing native query and ResultSetMapping mappings
2958 [main] DEBUG org.hibernate.cfg.Configuration  - Processing association property references
2958 [main] DEBUG org.hibernate.cfg.Configuration  - Processing foreign key constraints
3021 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000261: Table found: PUBLIC.CONTACT
3028 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000037: Columns: [username, email, lastname, firstname, contactid]
3028 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000108: Foreign keys: []
3028 [main] INFO  org.hibernate.tool.hbm2ddl.TableMetadata  - HHH000126: Indexes: [sys_idx_46]
3028 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Setting dialect [org.hibernate.dialect.HSQLDialect]
3029 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaUpdate  - HHH000232: Schema update complete
3029 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named HQL queries
3039 [main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Checking 0 named SQL queries
3039 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
3040 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - Registering EntityManagerFactory: contacts 
3040 [main] WARN  org.hibernate.ejb.internal.EntityManagerFactoryRegistry  - HHH000436: Entity manager factory name (contacts) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
3040 [main] DEBUG org.hibernate.internal.SessionImpl  - Opened session at timestamp: 13654581311
3040 [main] DEBUG com.capggemini.samples.applications.contacts.rest.application.Application  - Exiting Application.getSingletons()
15481 [qtp13731326-17] DEBUG com.capggemini.samples.applications.contacts.rest.services.ContactService  - Entering ContactService.getContactList()
15547 [qtp13731326-17] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: SELECT x from com.capggemini.samples.applications.contacts.rest.persistence.model.Contact x
15561 [qtp13731326-17] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  |  |  |  |  \-[IDENT] Node: 'capggemini'
       |     |  |  |  |  |  |  |  \-[IDENT] Node: 'samples'
       |     |  |  |  |  |  |  \-[IDENT] Node: 'applications'
       |     |  |  |  |  |  \-[IDENT] Node: 'contacts'
       |     |  |  |  |  \-[IDENT] Node: 'rest'
       |     |  |  |  \-[IDENT] Node: 'persistence'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Contact'
       |     \-[ALIAS] Node: 'x'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'x'

15562 [qtp13731326-17] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
15632 [qtp13731326-17] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
15693 [qtp13731326-17] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : com.capggemini.samples.applications.contacts.rest.persistence.model.Contact (x) -> contact0_
15694 [qtp13731326-17] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : x -> contact0_.contactId
15696 [qtp13731326-17] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
15697 [qtp13731326-17] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( {select clause} contact0_.contactId ) ( FromClause{level=1} Contact contact0_ ) )
15709 [qtp13731326-17] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [Contact contact0_]
15710 [qtp13731326-17] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
15711 [qtp13731326-17] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Contact)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'contact0_.contactId as contactId6_' {alias=x, className=com.capggemini.samples.applications.contacts.rest.persistence.model.Contact, tableAlias=contact0_}
    |  \-[SQL_TOKEN] SqlFragment: 'contact0_.email as email6_, contact0_.firstName as firstName6_, contact0_.lastName as lastName6_, contact0_.username as username6_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[x], fromElementByTableAlias=[contact0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Contact contact0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=x,role=null,tableName=Contact,tableAlias=contact0_,origin=null,columns={,className=com.capggemini.samples.applications.contacts.rest.persistence.model.Contact}}

15711 [qtp13731326-17] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
15729 [qtp13731326-17] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: SELECT x from com.capggemini.samples.applications.contacts.rest.persistence.model.Contact x
15733 [qtp13731326-17] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select contact0_.contactId as contactId6_, contact0_.email as email6_, contact0_.firstName as firstName6_, contact0_.lastName as lastName6_, contact0_.username as username6_ from Contact contact0_
15734 [qtp13731326-17] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
15741 [qtp13731326-17] DEBUG com.capggemini.samples.applications.contacts.rest.services.ContactService  - Exiting ContactService.getContactList()
15762 [qtp13731326-17] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl  - Obtaining JDBC connection
15763 [qtp13731326-17] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl  - Obtained JDBC connection
15771 [qtp13731326-17] DEBUG org.hibernate.SQL  - select contact0_.contactId as contactId6_, contact0_.email as email6_, contact0_.firstName as firstName6_, contact0_.lastName as lastName6_, contact0_.username as username6_ from Contact contact0_
15819 [qtp13731326-17] DEBUG org.hibernate.loader.Loader  - Result set row: 0
15824 [qtp13731326-17] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#0]
15843 [qtp13731326-17] DEBUG org.hibernate.loader.Loader  - Result set row: 1
15844 [qtp13731326-17] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#1]
15845 [qtp13731326-17] DEBUG org.hibernate.loader.Loader  - Result set row: 2
15846 [qtp13731326-17] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#2]
15848 [qtp13731326-17] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#0]
15853 [qtp13731326-17] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#0]
15854 [qtp13731326-17] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#1]
15855 [qtp13731326-17] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#1]
15856 [qtp13731326-17] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#2]
15857 [qtp13731326-17] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.capggemini.samples.applications.contacts.rest.persistence.model.Contact#2]
15858 [qtp13731326-17] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext  - Initializing non-lazy collections
